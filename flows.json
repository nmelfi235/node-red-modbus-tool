[
    {
        "id": "fc4228c1d0c8ff26",
        "type": "tab",
        "label": "627491_Inverter",
        "disabled": true,
        "info": ""
    },
    {
        "id": "3ecec1552952b614",
        "type": "tab",
        "label": "565966_Inverter",
        "disabled": true,
        "info": ""
    },
    {
        "id": "9a8f3626ccc896f4",
        "type": "tab",
        "label": "575071_Inverter",
        "disabled": true,
        "info": ""
    },
    {
        "id": "d7c2a5bc0460c6ff",
        "type": "tab",
        "label": "Inverters",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "f1f5fb5862a7667d",
        "type": "tab",
        "label": "WattNode",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "3ed1b5dba556babc",
        "type": "tab",
        "label": "AzureIOTHub",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "b4b3b6ea9198f7ce",
        "type": "tab",
        "label": "GenFile",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "7fde02a3dbacda26",
        "type": "tab",
        "label": "BMS",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "060240745de70bc6",
        "type": "tab",
        "label": "Logging Service",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6b0a517ed4eab56e",
        "type": "tab",
        "label": "Flow 2",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "bb83c536da590f5c",
        "type": "tab",
        "label": "WattNode Service",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e5680ec93718b3f6",
        "type": "tab",
        "label": "Inverter Service",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b1d7e9e0a4578c1f",
        "type": "tab",
        "label": "BMS Service",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "2dc6fe71588e17c7",
        "type": "tab",
        "label": "Historical Service",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ca2cbf00c7f20f50",
        "type": "subflow",
        "name": "Error 404 Response",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "efdcc764c4fbd2a8"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c625d94296a71599",
        "type": "subflow",
        "name": "Error 500 Response",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "baa4e621176aae3c"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "errormsg",
                "type": "str",
                "value": "There was an error.",
                "ui": {
                    "icon": "font-awesome/fa-comment-o",
                    "label": {
                        "en-US": "Error Message"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "logmsg",
                "type": "str",
                "value": "Error with Something:",
                "ui": {
                    "icon": "font-awesome/fa-file-text-o",
                    "label": {
                        "en-US": "Log Header"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "2dcb06cda48677d7",
        "type": "subflow",
        "name": "Error 400 Response",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "7fa8d5d3f42a87f8"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "errormsg",
                "type": "str",
                "value": "There was an error.",
                "ui": {
                    "icon": "font-awesome/fa-comment-o",
                    "label": {
                        "en-US": "Error Message"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "826f2798ac97948c",
        "type": "subflow",
        "name": "Parse Sunspec",
        "info": "`msg.buffer` should be set to the modbus read",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "543c0f2ecc46a615"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2420,
                "y": 60,
                "wires": [
                    {
                        "id": "08f42ce2b8e5ca7a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ssmodel",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-info-circle",
                    "label": {
                        "en-US": "Sunspec Model"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "a01b9d81d301bca7",
        "type": "group",
        "z": "d7c2a5bc0460c6ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "78e098060b3daac1",
            "962589460ebece7a",
            "d0e93b16635a6356"
        ],
        "x": 474,
        "y": 259
    },
    {
        "id": "c50ed32420e10603",
        "type": "group",
        "z": "d7c2a5bc0460c6ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "01f25421206e984b",
            "8017d5cb8c8e0d81",
            "3638fbb5c67d6124"
        ],
        "x": 474,
        "y": 439
    },
    {
        "id": "e48eb7d00661c99c",
        "type": "group",
        "z": "d7c2a5bc0460c6ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9a0df159c7d10c3e",
            "27dff83bc91560a0",
            "33f317dcd0d4e9cb"
        ],
        "x": 474,
        "y": 639
    },
    {
        "id": "55765ce5d5599b74",
        "type": "group",
        "z": "d7c2a5bc0460c6ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "1710353712cc2cdb",
            "331e43a05655d0ee",
            "f7e9309a7b14473b"
        ],
        "x": 474,
        "y": 819
    },
    {
        "id": "6376a83c1da5ed94",
        "type": "group",
        "z": "d7c2a5bc0460c6ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b2971b99d0632aec",
            "9040693354856b37",
            "bf87db9569a0a3ad"
        ],
        "x": 474,
        "y": 999
    },
    {
        "id": "a47b56bbe0c5f633",
        "type": "group",
        "z": "d7c2a5bc0460c6ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "667f2dcaae13527b",
            "aaa6ea4764284c1e",
            "a3bf1cfb970ddc9e"
        ],
        "x": 474,
        "y": 1179
    },
    {
        "id": "fa481a3fc6ed5e27",
        "type": "group",
        "z": "d7c2a5bc0460c6ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e1b646f7898386e9",
            "75fc8d57129c9934",
            "9efb7d024866b9aa"
        ],
        "x": 474,
        "y": 1359
    },
    {
        "id": "9bddbfc00a503b94",
        "type": "group",
        "z": "d7c2a5bc0460c6ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "37c20b173b5f8299",
            "fa2eddf29b068c09",
            "40254854636c579d"
        ],
        "x": 474,
        "y": 1539
    },
    {
        "id": "516f7bb3feac31b6",
        "type": "group",
        "z": "d7c2a5bc0460c6ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "af560c74ad45e313",
            "788ee9f7a38b9084",
            "e4ce99bdc4e25009"
        ],
        "x": 474,
        "y": 1719
    },
    {
        "id": "9cc59ec911186553",
        "type": "group",
        "z": "3ed1b5dba556babc",
        "name": "Local Storage backup",
        "style": {
            "stroke": "#92d04f",
            "label": true,
            "color": "#ffffff",
            "fill": "#92d04f",
            "label-position": "n"
        },
        "nodes": [
            "9f298fc737327e0d",
            "18eb7872a02c2a74"
        ],
        "x": 514,
        "y": 359
    },
    {
        "id": "ae35de366ad5e152",
        "type": "group",
        "z": "d7c2a5bc0460c6ff",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ed5c532e1321face",
            "0d761ebb298d84e8",
            "2ccd4c827ff09b5a"
        ],
        "x": 474,
        "y": 1919
    },
    {
        "id": "e7875e2de9c03017",
        "type": "group",
        "z": "060240745de70bc6",
        "name": "GET /log/info",
        "style": {
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "7af68148ed617c49",
            "085c4ad6a27bef27",
            "514a5906c8c36ed5",
            "f00f48fb83236220",
            "47d5ec2e29f4a75c",
            "8a64b210bb419880",
            "1467fa61be5516c4",
            "de7e2ba1bf229849",
            "321214cff9ac19e7",
            "e74a7937f9a8b10f",
            "9c0608e9f8a9a204",
            "75b2f8d3b8dafc8f",
            "af2fdf8df365932d"
        ],
        "x": 194,
        "y": 819,
        "w": 1472,
        "h": 210,
        "info": "# GET /log/info\r\nGet a list of logging devices or information\r\nabout a specific device.\r\n\r\n### URL Format\r\nThe request URL must be in the following formats.\r\n- `/log/info`\r\n- `/log/info/[id]` - `[id]` is a registered device id\r\n\r\n### Procedure\r\n1. Recieve request\r\n2. Verify request parameters\r\n3. Check that device exists\r\n4. Retrieve device info\r\n5. Respond with info\r\n\r\n### Responses\r\n- `404` - Unknown device id (if provided)\r\n- `500` - Internal error when reading from SQL database\r\n- `200` - Success  \r\nThe body of the message will contain either a\r\na list of device ids (if no id is given) or\r\nthe device information."
    },
    {
        "id": "9a4c8c642f90b5f9",
        "type": "group",
        "z": "060240745de70bc6",
        "name": "GET /log/status",
        "style": {
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "dcf90db21725757d",
            "6c449fd564a9ecd2",
            "4fd4e576a66823ba",
            "8943f005652f4bb1",
            "653a20d09b8b8699",
            "0c01c1f85f9c26bc",
            "ad0aa214fde7a3a9",
            "ae7baee6b8c03746",
            "a7dcaa9b3e542b70",
            "3a31511fa94e9129",
            "861c36e9da5cc731",
            "986ab8e0bcd62ccf",
            "fafe070557d0a9c8",
            "e438baf5e34ece62"
        ],
        "x": 194,
        "y": 399,
        "w": 2142,
        "h": 150,
        "info": "# GET /log/status\r\nGet the connection status of a device.\r\n\r\n### URL Format\r\nThe request URL must be in the following formats.\r\n- `/log/status/[id]` - `[id]` is a registered device id\r\n\r\n### Procedure\r\n1. Recieve request\r\n2. Verify request parameters\r\n3. Check that device exists\r\n4. Retrieve device status\r\n5. Respond with status\r\n\r\n### Responses\r\n- `404` - Unknown device id\r\n- `500` - Internal error when reading from SQL database\r\n- `500` - Device address unreachable\r\n- `500` - Malformed response from device address\r\n- `200` - Success  \r\nThe body of the message will contain the name\r\nof the device and it's respective status\r\n(`\"connected\"` or `\"fail\"`)."
    },
    {
        "id": "f1ccc8bd2ac54d97",
        "type": "group",
        "z": "060240745de70bc6",
        "name": "POST /log/register",
        "style": {
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "4fdcdd1aaf2cc630",
            "3431e4fa78349449",
            "cebb5660f8fa4666",
            "4ae0d4cced67a221",
            "e937f95755f0aea3",
            "29a8b67e75c87ff3",
            "bc223d5c956d8dac",
            "0b35f57da62bc11b",
            "68bc76ec11fdafee",
            "299b7d608855aa7a",
            "22e4d983d6f09553",
            "25f3a83e48519a95",
            "a24736a631d53c6a",
            "a493908c90418cda",
            "d006e5721410794e",
            "388612334105d9ab",
            "3141cf159d9fe3aa"
        ],
        "x": 194,
        "y": 579,
        "w": 2452,
        "h": 210,
        "info": "# POST /log/register\r\nRegister a new device to log data.\r\n\r\n### Request Body\r\nJSON object containing the following properties.\r\n- `name` - Device name\r\n- `address` - Device status URL\r\n- `powertype` - Either `\"acdc\"`, `\"ac\"`, `\"dc\"`, or `\"none\"`\r\n\r\n### Procedure\r\n1. Recieve request\r\n2. Verify request parameters\r\n3. Check that connection address responds\r\n4. Assign unique device ID\r\n5. Record device\r\n\r\n### Responses\r\n- `400` - There was an issue with the request parameters\r\n- `400` - The connection address responded incorrectly or not at all\r\n- `500` - Internal error when writing to SQL database\r\n- `200` - Success  \r\nThe body of the message will contain the recorded device information and id.\r\n\r\n### Device Status\r\nThe URL for device connection should respond\r\nwith a JSON object containing the following properties.\r\n- `status` - Either `\"connected\"` or `\"fail\"`"
    },
    {
        "id": "9f9ce2cd5a2131c3",
        "type": "group",
        "z": "060240745de70bc6",
        "name": "POST /log/record",
        "style": {
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "96f99957b5071c89",
            "36f3b8db5fa30706",
            "18270af3f52bdf02",
            "4bfe5a943caf0bd3",
            "b917ac3be5e883c7",
            "723ef3bd1c68f81a",
            "a9e4fa5dd7c04fbd",
            "8f860c08121896d9",
            "3365ddb2fede8b56",
            "fd9bc06971cb7d34",
            "8190129e7c5f717a",
            "7ff4163166824f35",
            "b5414f660bf6f02c",
            "933f379216a90879",
            "6d1a2f27d0eabb46",
            "d7570cfbdd465a92",
            "91f4422cae6d79f5",
            "89070e322dc5035d",
            "c7c4cbe8daa21e8a",
            "430f966847abe48c",
            "2322c598d49e45cd",
            "392a19925a0c9b2a",
            "34a2aa1c6dc52269",
            "6c49b36440883348"
        ],
        "x": 194,
        "y": 211.5,
        "w": 3592,
        "h": 157.5,
        "info": "# POST /log/record\r\nRecord device data into the log.\r\n\r\n### URL Format\r\nThe request URL must be in the following formats.\r\n- `/log/record/[category]/[id]` - `[category]` is\r\na logging category name and `[id]` is a registered\r\ndevice id\r\n\r\n### Request Body\r\nJSON object containing the values to be stored. See\r\nthe section below about logging categories.\r\n\r\n### Procedure\r\n1. Recieve request\r\n2. Check if category exists and device exists\r\n3. Verify device can record to the category\r\n4. Verify values are valid for the category\r\n5. Record data\r\n\r\n### Responses\r\n- `404` - Unknown category\r\n- `404` - Unknown device id\r\n- `400` - Invalid category for device\r\n- `400` - Invalid values for category\r\n- `500` - Internal error when writing to SQL database\r\n- `200` - Success  \r\nThe body of the message will contain the timestamp of\r\nthe recorded data, the device id and the device name.\r\n\r\n### Logging Categories\r\n\r\n#### AC Power\r\nCategory name: `\"powerac\"`  \r\nValues:\r\n- `timestamp` - Required, ISO string of time\r\nof data retrival\r\n- `volts` - Optional*, voltage in volts\r\n- `amps` - Optional*, amperage in amps\r\n- `watts` - Optional*, wattage in watts\r\n- `watthours` - Optional, watthours in watt-hours  \r\n*At the minimum, either `volts` and `amps`\r\nor `watts` must be provided.\r\n\r\n#### DC Power\r\nCategory name: `\"powerdc\"`  \r\nValues:\r\n- `timestamp` - Required, ISO string of time\r\nof data retrival\r\n- `volts` - Optional*, voltage in volts\r\n- `amps` - Optional*, amperage in amps\r\n- `watts` - Optional*, wattage in watts\r\n- `watthours` - Optional, watthours in watt-hours  \r\n*At the minimum, either `volts` and `amps`\r\nor `watts` must be provided.\r\n\r\n#### Battery Status\r\nCategory name: `\"battery\"`  \r\nValues:\r\n- `timestamp` - Required, ISO string of time\r\nof data retrival\r\n- `voltage` - Required, voltage level of the\r\nbattery in volts\r\n- `soc` - Optional, state of charge of the\r\nbattery in percentage\r\n- `health` - Optional, state of health of the\r\nbattery in percentage\r\n- `state` - Required, operational state of the\r\nbattery, either `\"standby\"`, `\"idle\"`, \r\n`\"charging\"`, or `\"discharging\"`"
    },
    {
        "id": "af38d5b5994866d9",
        "type": "group",
        "z": "e5680ec93718b3f6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "194adb635f9b1c11",
            "79a457a7c046625e",
            "f1865b16d068e488",
            "efea16944386fe65",
            "862dba68ffcab69a",
            "f1a98c8e98819aad",
            "bd2b19c13d701435",
            "34eb321b97e8d73e",
            "b0229cb481613388",
            "0c344cccf8263101",
            "2d223f6874c2ebd9",
            "9c8f9570df4d8eae",
            "3ef0649182b0b463",
            "2c25dc453d994771",
            "c78d10d9207b6273"
        ],
        "x": 94,
        "y": 319,
        "w": 1992,
        "h": 262
    },
    {
        "id": "06e9bdefebec18b3",
        "type": "group",
        "z": "e5680ec93718b3f6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "0facc22de6274825",
            "3619a5aeca928cd2",
            "ee354f4e98b669a7",
            "fa54962a7e0f8069",
            "ecb8d3cdc562a609",
            "f79824953eef4fc6"
        ],
        "x": 94,
        "y": 119,
        "w": 892,
        "h": 142
    },
    {
        "id": "0bf62b5a82a31810",
        "type": "modbus-client",
        "name": "BMS",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/bms",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "19200",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "20",
        "commandDelay": "1",
        "clientTimeout": "5000",
        "reconnectOnTimeout": false,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "ff919ca25c0fe87f",
        "type": "modbus-client",
        "name": "WattNode",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": true,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/wattnode",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "19200",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "8",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": false,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "fb44781298367a59",
        "type": "modbus-client",
        "name": "ConextGateway",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "10.11.254.251",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "10",
        "commandDelay": "1",
        "clientTimeout": "10000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "03db9fd492383123",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "ea611cdf1bc895ae",
        "type": "mqtt-broker",
        "name": "",
        "broker": "ssl://BESS-hub-Prod.azure-devices.net",
        "port": "8883",
        "tls": "03db9fd492383123",
        "clientid": "ci-f-cb-0339",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ef8e78210ed98d3e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "ssl://BESS-hub-QA.azure-devices.net",
        "port": "8883",
        "tls": "03db9fd492383123",
        "clientid": "627491-565966-575071-inverter",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "7426633e02a085fd",
        "type": "sqlitedb",
        "db": "/data/log.db",
        "mode": "RWC"
    },
    {
        "id": "38ada0c8c540ab8f",
        "type": "http response",
        "z": "ca2cbf00c7f20f50",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 360,
        "y": 40,
        "wires": []
    },
    {
        "id": "efdcc764c4fbd2a8",
        "type": "template",
        "z": "ca2cbf00c7f20f50",
        "name": "Error 404 HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>Error 404 (Not Found)</title>\n    </head>\n    <body>\n        <h1>Error 404 (Not Found)</h1>\n    </body>\n</html>",
        "output": "str",
        "x": 180,
        "y": 40,
        "wires": [
            [
                "38ada0c8c540ab8f"
            ]
        ]
    },
    {
        "id": "f7519777393391c6",
        "type": "http response",
        "z": "c625d94296a71599",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 620,
        "y": 40,
        "wires": []
    },
    {
        "id": "355048dc111f8fda",
        "type": "template",
        "z": "c625d94296a71599",
        "name": "Error 500 HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>Error 500 (Internal Error)</title>\n    </head>\n    <body>\n        <h1>Error 500 (Internal Error)</h1>\n        <p>Not sure what happened, but it wasn't right.</p>\n        <p>Server message: {{errormsg}}</p>\n    </body>\n</html>",
        "output": "str",
        "x": 440,
        "y": 40,
        "wires": [
            [
                "f7519777393391c6"
            ]
        ]
    },
    {
        "id": "baa4e621176aae3c",
        "type": "function",
        "z": "c625d94296a71599",
        "name": "Can't Template Env Vars",
        "func": "msg.errormsg = env.get('errormsg');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 40,
        "wires": [
            [
                "355048dc111f8fda",
                "12a98fab0b4b168a",
                "c506b4417c3adcd7"
            ]
        ]
    },
    {
        "id": "12a98fab0b4b168a",
        "type": "debug",
        "z": "c625d94296a71599",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "$env(\"logmsg\")",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 80,
        "wires": []
    },
    {
        "id": "c506b4417c3adcd7",
        "type": "debug",
        "z": "c625d94296a71599",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 120,
        "wires": []
    },
    {
        "id": "224408051c1acd08",
        "type": "http response",
        "z": "2dcb06cda48677d7",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 620,
        "y": 40,
        "wires": []
    },
    {
        "id": "c06559e559e12b19",
        "type": "template",
        "z": "2dcb06cda48677d7",
        "name": "Error 400 HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>Error 400 (Invalid Request)</title>\n    </head>\n    <body>\n        <h1>Error 400 (Invalid Request)</h1>\n        <p>Server message: {{errormsg}}</p>\n    </body>\n</html>",
        "output": "str",
        "x": 440,
        "y": 40,
        "wires": [
            [
                "224408051c1acd08"
            ]
        ]
    },
    {
        "id": "7fa8d5d3f42a87f8",
        "type": "function",
        "z": "2dcb06cda48677d7",
        "name": "Can't Template Env Vars",
        "func": "msg.errormsg = env.get('errormsg');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 40,
        "wires": [
            [
                "c06559e559e12b19"
            ]
        ]
    },
    {
        "id": "fa659ccd904d4a48",
        "type": "json",
        "z": "826f2798ac97948c",
        "name": "Parse Model",
        "property": "model",
        "action": "obj",
        "pretty": false,
        "x": 430,
        "y": 60,
        "wires": [
            [
                "857c73a93f042bd5"
            ]
        ]
    },
    {
        "id": "857c73a93f042bd5",
        "type": "change",
        "z": "826f2798ac97948c",
        "name": "Setup Model for Processing",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.model.group.points",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 60,
        "wires": [
            [
                "477ba5ba9b3becaf"
            ]
        ]
    },
    {
        "id": "477ba5ba9b3becaf",
        "type": "function",
        "z": "826f2798ac97948c",
        "name": "Remove Model ID and Length",
        "func": "msg.payload.shift();\nmsg.payload.shift();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 60,
        "wires": [
            [
                "3eb10677c0a29346"
            ]
        ]
    },
    {
        "id": "3eb10677c0a29346",
        "type": "function",
        "z": "826f2798ac97948c",
        "name": "Calculate Offsets",
        "func": "\nlet offset = 0;\nfor (let i = 0; i < msg.payload.length; i++) {\n    msg.payload[i].offset = offset;\n    offset += msg.payload[i].size * 2;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 60,
        "wires": [
            [
                "818f774870e37e5c"
            ]
        ]
    },
    {
        "id": "818f774870e37e5c",
        "type": "split",
        "z": "826f2798ac97948c",
        "name": "Split by Register",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1420,
        "y": 60,
        "wires": [
            [
                "a9b1793dab0d783d"
            ]
        ]
    },
    {
        "id": "a9b1793dab0d783d",
        "type": "function",
        "z": "826f2798ac97948c",
        "name": "Process Parsing Info",
        "func": "\nmsg.payload.type = context.get(\"typeConversion\")[msg.payload.type];\n\nswitch (msg.payload.type) {\n    case \"binary\":\n        msg.payload.length = msg.payload.size * 16;\n        break;\n    case \"string\":\n        msg.payload.length = msg.payload.size;\n        break;\n    case \"hex\":\n        msg.payload.length = msg.payload.size * 2;\n        break;\n    default:\n        msg.payload.length = undefined;\n        break;\n}\n\nmsg.payload.offsetbit = undefined;\nmsg.payload.mask = \"\";\nmsg.payload.scale = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\ncontext.set(\"typeConversion\", \n    {\n        \"int16\": \"int16\",\n        \"int32\": \"int32\",\n        \"int64\": \"bigint64\",\n        \"raw16\": \"16bit\",\n        \"uint16\": \"uint16\",\n        \"uint32\": \"uint32\",\n        \"uint64\": \"biguint64\",\n        \"acc16\": \"uint16\",\n        \"acc32\": \"uint32\",\n        \"acc64\": \"biguint64\",\n        \"bitfield16\": \"binary\",\n        \"bitfield32\": \"binary\",\n        \"bitfield64\": \"binary\",\n        \"enum16\": \"uint16\",\n        \"enum32\": \"uint32\",\n        \"float32\": \"float\",\n        \"float64\": \"double\",\n        \"string\": \"string\",\n        \"sf\": \"int16\",\n        \"pad\": \"hex\",\n        \"ipaddr\": \"hex\",\n        \"ipv6addr\": \"hex\",\n        \"eui48\": \"hex\",\n        \"sunssf\": \"int16\",\n        \"count\": \"hex\"\n    }\n);",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 60,
        "wires": [
            [
                "5c6f790fb86827ca"
            ]
        ]
    },
    {
        "id": "5c6f790fb86827ca",
        "type": "join",
        "z": "826f2798ac97948c",
        "name": "Join Together",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1860,
        "y": 60,
        "wires": [
            [
                "9405978604099018"
            ]
        ]
    },
    {
        "id": "9405978604099018",
        "type": "change",
        "z": "826f2798ac97948c",
        "name": "Setup Parsing Specs",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "specs.items",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "specs.options",
                "pt": "msg",
                "to": "{\"resultType\": \"object\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 60,
        "wires": [
            [
                "08f42ce2b8e5ca7a"
            ]
        ]
    },
    {
        "id": "08f42ce2b8e5ca7a",
        "type": "buffer-parser",
        "z": "826f2798ac97948c",
        "name": "Parse Buffer",
        "data": "buffer",
        "dataType": "msg",
        "specification": "specs",
        "specificationType": "msg",
        "items": [
            {
                "type": "int16be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 2290,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "543c0f2ecc46a615",
        "type": "change",
        "z": "826f2798ac97948c",
        "name": "Get Model from Env",
        "rules": [
            {
                "t": "set",
                "p": "model",
                "pt": "msg",
                "to": "ssmodel",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 60,
        "wires": [
            [
                "fa659ccd904d4a48"
            ]
        ]
    },
    {
        "id": "242b82e850fe4075",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "21-22",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 20,\n    'quantity': 2\n}\nmsg.topic = \"group1a\" \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 180,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "18cff2df4fe1cefe",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "31-32",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 30,\n    'quantity': 2\n}\nmsg.topic = \"group1b\" \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 220,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "8c8720f44cde784a",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "41-43",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 40,\n    'quantity': 3\n}\nmsg.topic = 'group2'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 260,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "f0477fa374faa5b0",
        "type": "modbus-flex-getter",
        "z": "fc4228c1d0c8ff26",
        "name": "627491_Inverter",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "fb44781298367a59",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 830,
        "y": 640,
        "wires": [
            [],
            [
                "6450fac09caa56b3",
                "c6475b40d6dcc70c",
                "e74d42a32d4d4e78",
                "52dfe8d16589268e",
                "d049f4a335adfc82",
                "fa58944cd5888b80",
                "d9ac431fbb7f3030",
                "70d2987d661f0e87",
                "2e041b668fcfe21f",
                "cdb8104dbfdaa21f",
                "35b45f243ac170e5",
                "3ee4c7a8e3c67ac3",
                "ee5aaf765c743a13",
                "fe0586377387ddb5",
                "ba1e0fd6b9810394",
                "069ac88011f9d4e7",
                "0523129a8cd3c65d",
                "6e2dd2a9c9811f38",
                "895ccf068dae189c",
                "599ac8bce35386ff",
                "9f51d930e6e4fb99",
                "c348def44d279f62",
                "649c9e4645bc2c74"
            ]
        ]
    },
    {
        "id": "b106126d717a1f70",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Slave_Addr",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Device_Number",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "System_Instance",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1310,
        "y": 240,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "6450fac09caa56b3",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter2",
        "func": "if(msg.topic == 'group2'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 240,
        "wires": [
            [
                "b106126d717a1f70"
            ]
        ]
    },
    {
        "id": "c6475b40d6dcc70c",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter1",
        "func": "if(msg.topic == 'group1a'){\nconst buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readUInt32BE();\nmsg.payload = {'unique_Id':value};\nreturn msg;\n}\nelse if (msg.topic == 'group1b'){\n    const buf = Buffer.from(msg.payload.buffer);\n    const value = buf.readUInt32BE();\n    msg.payload = { 'FW_Version': value};\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 200,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "7e984d559977a575",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "65-78",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 64,\n    'quantity': 14\n}\nmsg.topic = 'group3'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 300,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "e74d42a32d4d4e78",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter3",
        "func": "if(msg.topic == 'group3'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 280,
        "wires": [
            [
                "1224c1756ee2a307"
            ]
        ]
    },
    {
        "id": "1224c1756ee2a307",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Device_State",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Device_Present",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Fault_Bitmap_0",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Fault_Bitmap_1",
                "offset": 6,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Fault_Bimap_2",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Fault_Bitmap_3",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Warning_Bitmap_0",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Inverter_Enabled_Status",
                "offset": 14,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charger_Enabled_Status",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Sell_Enabled_Status",
                "offset": 18,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Forced_Sell",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Active_Faults",
                "offset": 22,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Active_Warnings",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_Mode_Status",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1310,
        "y": 280,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "9c98ce836105019c",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "79-124",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 78,\n    'quantity': 46\n}\nmsg.topic = 'group4'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 340,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "5f623173313544ed",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Configuration_Errors",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "DC_Voltage",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "DC_Current",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "DC_Power",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Temperature",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Reserved",
                "offset": 18,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Invert_DC_Current",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Invert_DC_Power",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Charge_DC_Current",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Charge_DC_Power",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_DC_Power_Percentage",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Frequency",
                "offset": 38,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Voltage",
                "offset": 40,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC1_Current",
                "offset": 44,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC1_Power",
                "offset": 48,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Input_Power (VA)",
                "offset": 52,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Input_Current",
                "offset": 56,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Input_Power (W)",
                "offset": 60,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_L1_Voltage",
                "offset": 64,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_L2_Current",
                "offset": 68,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_L2_Voltage",
                "offset": 72,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_L1_Current",
                "offset": 76,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Voltage_Qualified",
                "offset": 80,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Frequency _Qualified",
                "offset": 82,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Qualified_Duration",
                "offset": 84,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Inverter_Status",
                "offset": 88,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charger_Status",
                "offset": 90,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1310,
        "y": 320,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "52dfe8d16589268e",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter4",
        "func": "if(msg.topic == 'group4'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 320,
        "wires": [
            [
                "5f623173313544ed"
            ]
        ]
    },
    {
        "id": "f02d96a30a23244d",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "MessageProcessing",
        "func": "var payload = msg.payload\nmsg.payload = {\n    \"data\": payload,\n    \"model\": \"conext_gw_627491_inverter\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 620,
        "wires": [
            [
                "d326110cb887c672"
            ]
        ]
    },
    {
        "id": "86cfe0699b84e91e",
        "type": "comment",
        "z": "fc4228c1d0c8ff26",
        "name": "Register Address Offset: Subtract 1 from Actual register address",
        "info": "",
        "x": 850,
        "y": 120,
        "wires": []
    },
    {
        "id": "2c835f3620f20331",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "127-131",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 126, \n    'quantity': 5\n}\nmsg.topic = 'group5'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 380,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "d049f4a335adfc82",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter5",
        "func": "if(msg.topic == 'group5'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 360,
        "wires": [
            [
                "1d8118fb8d9e4456"
            ]
        ]
    },
    {
        "id": "1d8118fb8d9e4456",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "AC1_Voltage",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Current",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Frequency",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1310,
        "y": 360,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "143e64ef0a120890",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "353-430",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 352,\n    'quantity': 72\n}\nmsg.topic = 'group12'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 660,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "3ee4c7a8e3c67ac3",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter12",
        "func": "if(msg.topic == 'group12'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 640,
        "wires": [
            [
                "10a4cd74c97ffd5b"
            ]
        ]
    },
    {
        "id": "10a4cd74c97ffd5b",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Identify_Enable",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Inverter_Enable_Disable",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Grid_Support_Sell_Enable_Disable",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Force_Sell",
                "offset": 6,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charger_Enable_Disable",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Force_Charger_State",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Operating_Mode",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Reset",
                "offset": 14,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Clear",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Search_Mode",
                "offset": 18,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Inverter_Mode",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Remote_Power_Off",
                "offset": 22,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Power_Save",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Sell_Delay_40_Sec",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_Cycle",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Charge_Rate",
                "offset": 30,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Equalize_Now",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Default_Battery_Temperature",
                "offset": 34,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "GFS_Enable",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Type",
                "offset": 38,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Nominal_Battery_Voltage",
                "offset": 40,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Bank_Capacity",
                "offset": 44,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Temperature_Coefficient",
                "offset": 46,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Grid_Support_Voltage",
                "offset": 48,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Recharge_Voltage",
                "offset": 52,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Battery_Cut_Out",
                "offset": 56,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Low_Battery_Cut_Out_Delay",
                "offset": 60,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Battery_Trigger_Set",
                "offset": 62,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Low_Battery_Trigger_Set_Delay",
                "offset": 66,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Battery_Trigger_Clear",
                "offset": 68,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Low_Battery_Trigger_Clear_Delay",
                "offset": 72,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC_Priority",
                "offset": 74,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Breaker_Size",
                "offset": 76,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC2_Breaker_Size",
                "offset": 78,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "High_Battery_Cut_Out",
                "offset": 80,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "High_Battery_Trigger_Set",
                "offset": 84,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "High_Battery_Trigger_Set_Delay",
                "offset": 88,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "High_Battery_Trigger_Clear",
                "offset": 90,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "High_Battery_Trigger_Clear Delay",
                "offset": 94,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Search_Watts",
                "offset": 96,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Search_Delay",
                "offset": 98,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Equalize_Voltage_Set_Point",
                "offset": 100,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Equalize_Support",
                "offset": 104,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Bulk_Boost_Voltage_Set_Point",
                "offset": 106,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Absorption_Voltage_Set_Point",
                "offset": 110,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Absorption_Time",
                "offset": 114,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Float_Voltage_Set_Point",
                "offset": 116,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Low_Voltage",
                "offset": 120,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_Low_Voltage",
                "offset": 124,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_High_Voltage",
                "offset": 128,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_High_Voltage",
                "offset": 132,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_Block_Start",
                "offset": 136,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_Block_Stop",
                "offset": 138,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Load_Shave_Stop",
                "offset": 140,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Load_Shave_Start",
                "offset": 142,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1310,
        "y": 640,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "6d767b96d4387e12",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "431-497",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 430,\n    'quantity': 44\n}\nmsg.topic = 'group13'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 700,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "ee5aaf765c743a13",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter13",
        "func": "if(msg.topic == 'group13'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 700,
        "wires": [
            [
                "3e6e23dd451eec94"
            ]
        ]
    },
    {
        "id": "3e6e23dd451eec94",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "AC1_Low_FrequencyEnable",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC2_Low_Frequency",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_High_Frequency",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC2_High_Frequency",
                "offset": 6,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Load_Shave",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Grid_Support",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Maximum_Sell_Amps",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Load_Shave_Amps",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Temperature_TriggerSet",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Low_Temperature_TriggerSetDelay",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Temperature_TriggerClear",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Low_Temperature_TriggerClearDelay",
                "offset": 30,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "High_Temperature_TriggerSet",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "High_Temperature_TriggerSetDelay",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "High_Temperature_TriggerClear",
                "offset": 38,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "High_Temperature_TriggerClearDelay",
                "offset": 42,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Refresh_Configuration_Data",
                "offset": 44,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC_Output_Association_Loads",
                "offset": 46,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Association",
                "offset": 48,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Association_Grid",
                "offset": 50,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Discharge_Current",
                "offset": 52,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Discharge _TimeInterval",
                "offset": 54,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "GVS_Enable_Disable",
                "offset": 56,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Reactive_CapacitivePower",
                "offset": 58,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Reactive_Inductive_Power",
                "offset": 60,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Reactive_Power_GridVoltage",
                "offset": 62,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Minimum_Reactive_PowerGridVoltage",
                "offset": 64,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Inductive_Voltage_SetPoint",
                "offset": 66,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Capacitive_Voltage_SetPoint",
                "offset": 68,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Voltage_Threshold_to_start_stop_excitation",
                "offset": 70,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Excitation_Control_Delay_Time",
                "offset": 72,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "State_of_Charge_Level_to_Stop",
                "offset": 74,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "State_of_Charge_Stop_Delay",
                "offset": 76,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "State_of_Charge_Level_to_Start",
                "offset": 78,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "State_of_Charge_Start_Delay",
                "offset": 80,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Generator_Support_Plus",
                "offset": 82,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC_Coupling",
                "offset": 84,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Energy_Balance",
                "offset": 86,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1330,
        "y": 700,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "181a980c369c11b0",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "498-527",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 501,\n    'quantity': 25\n}\nmsg.topic = 'group14'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 740,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "fe0586377387ddb5",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter14",
        "func": "if(msg.topic == 'group14'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 740,
        "wires": [
            [
                "0fc29229eb5cc225"
            ]
        ]
    },
    {
        "id": "0fc29229eb5cc225",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "AC1_Transfer_Switch_Delay",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC2_Transfer_Switch_Delay",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Sell_Block_Start",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Sell_Block_End",
                "offset": 6,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Auxiliary_Output_Trigger_Block Start",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Auxiliary_Output_Trigger_Block_End",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Heat_Sink_High_TemperatureTriggerSet",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Heat_Sink_High_TemperatureTriggerSet Delay",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Sell_Scale_Percentage",
                "offset": 18,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Heat_Sink_High_TemperatureTriggerClear",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Heat_Sink_High_Temperature_TriggerClearDelay",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Auxiliary_Output_TriggerSource",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Remote_Sell",
                "offset": 30,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "External_Transfer _Contactor",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC_Transient_Over_Voltage_Disconnect",
                "offset": 34,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "External_Load_Switch",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Maximum_Bulk_Charge_Current",
                "offset": 38,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Maximum_Absorption _Charge_Current",
                "offset": 42,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Maximum_Float_Charge  Current",
                "offset": 46,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1330,
        "y": 740,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "4e99289352463ba5",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "139-153",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 138, \n    'quantity': 15\n}\nmsg.topic = 'group7'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 460,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "d9ac431fbb7f3030",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter7",
        "func": "if(msg.topic == 'group7'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 440,
        "wires": [
            [
                "0c23497c81dff4a6"
            ]
        ]
    },
    {
        "id": "0c23497c81dff4a6",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "AC1_Output_Power (VA)",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC_Load_Voltage",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC_Load_L1_Voltage",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC_Load_L2_Voltage",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC_Load_L1_Current",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC_Load_L2_Current",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC_Load_Current",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC_Load_Frequency",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1310,
        "y": 440,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "29164d9ca794ba49",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "133",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 132, \n    'quantity': 2\n}\nmsg.topic = 'group6'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 420,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "fa58944cd5888b80",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter6",
        "func": "if(msg.topic == 'group6'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 400,
        "wires": [
            [
                "f0e5d5ddba7367a9"
            ]
        ]
    },
    {
        "id": "f0e5d5ddba7367a9",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "AC1_Output_Power(W)",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1310,
        "y": 400,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "a26e50d533f76fc0",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "161-169",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 160, \n    'quantity': 9\n}\nmsg.topic = 'group9'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 540,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "2e041b668fcfe21f",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter9",
        "func": "if(msg.topic == 'group9'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 520,
        "wires": [
            [
                "b81119f74e1d2a2d"
            ]
        ]
    },
    {
        "id": "b81119f74e1d2a2d",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int32be",
                "name": "AC_Load_Power_(VA)",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_Voltage",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_Current",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "AC2_Frequency",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "AC2_Voltage_Qualified",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "AC2_Frequency _Qualified",
                "offset": 14,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1310,
        "y": 520,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "999bdedc85356862",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "155",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 154, \n    'quantity': 2\n}\nmsg.topic = 'group8'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 500,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "70d2987d661f0e87",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter8",
        "func": "if(msg.topic == 'group8'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 480,
        "wires": [
            [
                "69d1b62f21ceda8f"
            ]
        ]
    },
    {
        "id": "69d1b62f21ceda8f",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int32be",
                "name": "AC_Load_Power",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1310,
        "y": 480,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "cf6df36190254da2",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "171-173",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 170, \n    'quantity': 4\n}\nmsg.topic = 'group10'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 580,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "cdb8104dbfdaa21f",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter10",
        "func": "if(msg.topic == 'group10'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 560,
        "wires": [
            [
                "0612172d19ba4b7f"
            ]
        ]
    },
    {
        "id": "0612172d19ba4b7f",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "AC2_Qualified_Duration",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC_Power",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1310,
        "y": 560,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "e8ee0ad6ce995ab4",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "179-195",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 178, \n    'quantity': 17 \n}\nmsg.topic = 'group11'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 620,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "35b45f243ac170e5",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter11",
        "func": "if(msg.topic == 'group11'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 600,
        "wires": [
            [
                "494510ce5a3c51cf"
            ]
        ]
    },
    {
        "id": "494510ce5a3c51cf",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "AC2_L1_Voltage",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC2_L1_Current",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_L2_Voltage",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC2_L2_Current",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_Power _Apparent",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Auxiliary_Output_Status",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Auxiliary_Output_On_Reason",
                "offset": 22,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Auxiliary_Output_Off_Reason",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Grid_Tie_Sell_Level",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Switch_Operating_State",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Switch_Mode",
                "offset": 30,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Warning_Bitmap_1",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1310,
        "y": 600,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "2d2e9178772b47b8",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "689",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 688,\n    'quantity': 1\n}\nmsg.topic = 'group15'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 780,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "ba1e0fd6b9810394",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter15",
        "func": "if(msg.topic == 'group15'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 780,
        "wires": [
            [
                "e5880940da7fd1d0"
            ]
        ]
    },
    {
        "id": "e5880940da7fd1d0",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int16be",
                "name": "XW_Power_Factor",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1330,
        "y": 780,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "caf12fd51e0cc7d9",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "60-61",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 59,\n    'quantity': 3\n}\nmsg.topic = 'group16'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 820,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "069ac88011f9d4e7",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter16",
        "func": "if(msg.topic == 'group16'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 820,
        "wires": [
            [
                "16ba859c677de60b"
            ]
        ]
    },
    {
        "id": "16ba859c677de60b",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Configuration_Status",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Configuration_Refresh_Counter",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1330,
        "y": 820,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "68f1c575150e6ad2",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "229",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 228,\n    'quantity': 2\n}\nmsg.topic = 'group17'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 860,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "0523129a8cd3c65d",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter17",
        "func": "if(msg.topic == 'group17'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 860,
        "wires": [
            [
                "87bd0a757fab9429"
            ]
        ]
    },
    {
        "id": "87bd0a757fab9429",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Energy_From_Battery_Lifetime",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1330,
        "y": 860,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "4fab2565f80af9ab",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "239",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 238,\n    'quantity': 2\n}\nmsg.topic = 'group18'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 900,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "6e2dd2a9c9811f38",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter18",
        "func": "if(msg.topic == 'group18'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 900,
        "wires": [
            [
                "060a05867fc4b570"
            ]
        ]
    },
    {
        "id": "060a05867fc4b570",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Battery_Charge_Active_Today",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1330,
        "y": 900,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "e94ea328d5851e8a",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "253",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 252,\n    'quantity': 2\n}\nmsg.topic = 'group19'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 940,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "895ccf068dae189c",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter19",
        "func": "if(msg.topic == 'group19'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 940,
        "wires": [
            [
                "d7d113ef9eb5b236"
            ]
        ]
    },
    {
        "id": "d7d113ef9eb5b236",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Energy_To_Battery_Lifetime",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1330,
        "y": 940,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "1a964f3e3baeda80",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "277-279",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 276,\n    'quantity': 4\n}\nmsg.topic = 'group20'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 980,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "599ac8bce35386ff",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter20",
        "func": "if(msg.topic == 'group20'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 980,
        "wires": [
            [
                "05d1d4086f64aef8"
            ]
        ]
    },
    {
        "id": "05d1d4086f64aef8",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Grid_Input_Energy_Lifetime",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Grid_Input_Active_Lifetime",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1330,
        "y": 980,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "590919dea87414e4",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "301",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 300,\n    'quantity': 2\n}\nmsg.topic = 'group21'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1020,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "9f51d930e6e4fb99",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter21",
        "func": "if(msg.topic == 'group21'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1020,
        "wires": [
            [
                "8b2d890f34cca10a"
            ]
        ]
    },
    {
        "id": "8b2d890f34cca10a",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Grid_Output_Energy_Lifetime",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1330,
        "y": 1020,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "ce22fd790d9b0ab2",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "331",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 330,\n    'quantity': 2\n}\nmsg.topic = 'group22'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1060,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "c348def44d279f62",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter22",
        "func": "if(msg.topic == 'group22'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1060,
        "wires": [
            [
                "268286ca70db6a5f"
            ]
        ]
    },
    {
        "id": "268286ca70db6a5f",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Generator_Input Active_This_Hour",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1330,
        "y": 1060,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "dfc277d82eaa4ee6",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "498-499",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 497,\n    'quantity': 3\n}\nmsg.topic = 'group23'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1100,
        "wires": [
            [
                "f0477fa374faa5b0"
            ]
        ]
    },
    {
        "id": "649c9e4645bc2c74",
        "type": "function",
        "z": "fc4228c1d0c8ff26",
        "name": "Filter23",
        "func": "if(msg.topic == 'group23'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1100,
        "wires": [
            [
                "7bf38390e70e0ca5"
            ]
        ]
    },
    {
        "id": "7bf38390e70e0ca5",
        "type": "buffer-parser",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Peak_Load _Shaving_Delay",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Battery_Cut_Out_Hysteresis",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1330,
        "y": 1100,
        "wires": [
            [
                "f02d96a30a23244d"
            ]
        ]
    },
    {
        "id": "b18d1fb195442ef7",
        "type": "cronplus",
        "z": "fc4228c1d0c8ff26",
        "name": "cron-inject",
        "outputField": "id",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "num",
                "payload": "10",
                "expressionType": "cron",
                "expression": "*/5 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 150,
        "y": 640,
        "wires": [
            [
                "242b82e850fe4075",
                "18cff2df4fe1cefe",
                "8c8720f44cde784a",
                "7e984d559977a575",
                "9c98ce836105019c",
                "2c835f3620f20331",
                "29164d9ca794ba49",
                "4e99289352463ba5",
                "999bdedc85356862",
                "a26e50d533f76fc0",
                "cf6df36190254da2",
                "e8ee0ad6ce995ab4",
                "143e64ef0a120890",
                "6d767b96d4387e12",
                "181a980c369c11b0",
                "2d2e9178772b47b8",
                "caf12fd51e0cc7d9",
                "68f1c575150e6ad2",
                "4fab2565f80af9ab",
                "e94ea328d5851e8a",
                "1a964f3e3baeda80",
                "590919dea87414e4",
                "ce22fd790d9b0ab2",
                "dfc277d82eaa4ee6"
            ]
        ]
    },
    {
        "id": "d326110cb887c672",
        "type": "join",
        "z": "fc4228c1d0c8ff26",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload.data",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "10",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1790,
        "y": 620,
        "wires": [
            [
                "d97d96a2f914c05c"
            ]
        ]
    },
    {
        "id": "d97d96a2f914c05c",
        "type": "link out",
        "z": "fc4228c1d0c8ff26",
        "name": "Inv1",
        "mode": "link",
        "links": [],
        "x": 1925,
        "y": 620,
        "wires": []
    },
    {
        "id": "b90488d7ad0e252b",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "21-22",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 20,\n    'quantity': 2\n}\nmsg.topic = \"group1a\" \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 200,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "38ae30d003eaa168",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "31-32",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 30,\n    'quantity': 2\n}\nmsg.topic = \"group1b\" \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 240,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "03f272168b8a6a24",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "41-43",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 40,\n    'quantity': 3\n}\nmsg.topic = 'group2'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 280,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "948f9e8e825ea5a1",
        "type": "modbus-flex-getter",
        "z": "3ecec1552952b614",
        "name": "565966_Inverter",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "fb44781298367a59",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 840,
        "y": 640,
        "wires": [
            [],
            [
                "97e41d548a363660",
                "5a6bef93831cce5c",
                "9159fd3880b0a3fc",
                "6f273351f4b88024",
                "da2d0caf6b6d21b8",
                "ac03b397a3d3a002",
                "64e0c3d5d43d155d",
                "06d03a956eb154e1",
                "a3e7a8daae334d78",
                "469d820e491ac647",
                "0f4c6e263c32145a",
                "37f253eb8da1b538",
                "e06bbfcb72564538",
                "6542367fcf4aa7d6",
                "da69c20f60064ba3",
                "0c8d794569cab410",
                "7c581785eab9ce35",
                "6dc381831b43e43e",
                "ea6103046d86b154",
                "8cb311ec932bdca1",
                "335410885f484e0d",
                "6e3146cdaf1d5b8d",
                "8f87d5c3cc4c41f8"
            ]
        ]
    },
    {
        "id": "97e41d548a363660",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter2",
        "func": "if(msg.topic == 'group2'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 240,
        "wires": [
            [
                "148f4f9c4ca35df6"
            ]
        ]
    },
    {
        "id": "5a6bef93831cce5c",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter1",
        "func": "if(msg.topic == 'group1a'){\nconst buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readUInt32BE();\nmsg.payload = {'uniqueId':value};\nreturn msg;\n}\nelse if (msg.topic == 'group1b'){\n    const buf = Buffer.from(msg.payload.buffer);\n    const value = buf.readUInt32BE();\n    msg.payload = { 'FWVersion': value};\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 200,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "b3ee2f579f6c8659",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "65-78",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 64,\n    'quantity': 14\n}\nmsg.topic = 'group3'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 320,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "9159fd3880b0a3fc",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter3",
        "func": "if(msg.topic == 'group3'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 280,
        "wires": [
            [
                "4242cae6d7ffbd2f"
            ]
        ]
    },
    {
        "id": "0628a0340bc3662a",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "79-124",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 78,\n    'quantity': 46\n}\nmsg.topic = 'group4'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 360,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "6f273351f4b88024",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter4",
        "func": "if(msg.topic == 'group4'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 320,
        "wires": [
            [
                "fbb3ba307f41cc49"
            ]
        ]
    },
    {
        "id": "361c2aa5f6062607",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "MessageProcessing",
        "func": "var payload = msg.payload\nmsg.payload = {\n    \"data\": payload,\n    \"model\": \"conext_gw_565966_inverter\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 660,
        "wires": [
            [
                "fce2d39c60b7211b"
            ]
        ]
    },
    {
        "id": "66dfcccaac93a3cf",
        "type": "comment",
        "z": "3ecec1552952b614",
        "name": "Register Address Offset: Subtract 1 from Actual register address",
        "info": "",
        "x": 810,
        "y": 160,
        "wires": []
    },
    {
        "id": "23873c3438f4c8ae",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "127-131",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 126, \n    'quantity': 5\n}\nmsg.topic = 'group5'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 400,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "da2d0caf6b6d21b8",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter5",
        "func": "if(msg.topic == 'group5'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 360,
        "wires": [
            [
                "c4e24d4e40d27e42"
            ]
        ]
    },
    {
        "id": "6d4870f821530508",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "353-430",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 352,\n    'quantity': 72\n}\nmsg.topic = 'group12'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 680,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "37f253eb8da1b538",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter12",
        "func": "if(msg.topic == 'group12'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 640,
        "wires": [
            [
                "867c8d20d1efaff0"
            ]
        ]
    },
    {
        "id": "92b2246eae05df86",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "431-497",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 430,\n    'quantity': 44\n}\nmsg.topic = 'group13'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 720,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "e06bbfcb72564538",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter13",
        "func": "if(msg.topic == 'group13'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 700,
        "wires": [
            [
                "1b65fc1030efe231"
            ]
        ]
    },
    {
        "id": "94c81f8cf0f7b0bd",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "498-527",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 501,\n    'quantity': 25\n}\nmsg.topic = 'group14'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 760,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "6542367fcf4aa7d6",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter14",
        "func": "if(msg.topic == 'group14'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 740,
        "wires": [
            [
                "f4df63f892654346"
            ]
        ]
    },
    {
        "id": "fd29ff0476091be8",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "139-153",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 138, \n    'quantity': 15\n}\nmsg.topic = 'group7'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 480,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "64e0c3d5d43d155d",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter7",
        "func": "if(msg.topic == 'group7'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 440,
        "wires": [
            [
                "94a62ad59dfb3e00"
            ]
        ]
    },
    {
        "id": "b8b01e55e5d5d0bf",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "133",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 132, \n    'quantity': 2\n}\nmsg.topic = 'group6'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 440,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "ac03b397a3d3a002",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter6",
        "func": "if(msg.topic == 'group6'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 400,
        "wires": [
            [
                "0f3de187e3d46fdc"
            ]
        ]
    },
    {
        "id": "01a04a299bee40f7",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "161-169",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 160, \n    'quantity': 9\n}\nmsg.topic = 'group9'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 560,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "a3e7a8daae334d78",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter9",
        "func": "if(msg.topic == 'group9'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 520,
        "wires": [
            [
                "38ac93e9e3ebe865"
            ]
        ]
    },
    {
        "id": "fef4fb4bc73ea9de",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "155",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 154, \n    'quantity': 2\n}\nmsg.topic = 'group8'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 520,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "06d03a956eb154e1",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter8",
        "func": "if(msg.topic == 'group8'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 480,
        "wires": [
            [
                "0fb92cad6db68d8e"
            ]
        ]
    },
    {
        "id": "bca80c37d1bed9ad",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "171-173",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 170, \n    'quantity': 4\n}\nmsg.topic = 'group10'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 600,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "469d820e491ac647",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter10",
        "func": "if(msg.topic == 'group10'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 560,
        "wires": [
            [
                "621fbbaff1e13712"
            ]
        ]
    },
    {
        "id": "0ed1250e28c7d818",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "179-195",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 178, \n    'quantity': 17 \n}\nmsg.topic = 'group11'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 640,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "0f4c6e263c32145a",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter11",
        "func": "if(msg.topic == 'group11'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 600,
        "wires": [
            [
                "4a32cb6fa3443bfb"
            ]
        ]
    },
    {
        "id": "901a65e48d40ba98",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "689",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 688,\n    'quantity': 1\n}\nmsg.topic = 'group15'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 800,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "da69c20f60064ba3",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter15",
        "func": "if(msg.topic == 'group15'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 780,
        "wires": [
            [
                "25e9e20a86af90da"
            ]
        ]
    },
    {
        "id": "174dfa57b3eace2d",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "60-61",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 59,\n    'quantity': 3\n}\nmsg.topic = 'group16'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 840,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "0c8d794569cab410",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter16",
        "func": "if(msg.topic == 'group16'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 820,
        "wires": [
            [
                "27e0bac7a27df231"
            ]
        ]
    },
    {
        "id": "c87486710205ef09",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "229",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 228,\n    'quantity': 2\n}\nmsg.topic = 'group17'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 880,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "7c581785eab9ce35",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter17",
        "func": "if(msg.topic == 'group17'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 860,
        "wires": [
            [
                "bcbed2334de07ce9"
            ]
        ]
    },
    {
        "id": "065cf5a07bddbb91",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "239",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 238,\n    'quantity': 2\n}\nmsg.topic = 'group18'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 920,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "6dc381831b43e43e",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter18",
        "func": "if(msg.topic == 'group18'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 900,
        "wires": [
            [
                "5aa57c27c6cca995"
            ]
        ]
    },
    {
        "id": "3078bb74c436cccd",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "253",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 252,\n    'quantity': 2\n}\nmsg.topic = 'group19'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 960,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "ea6103046d86b154",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter19",
        "func": "if(msg.topic == 'group19'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 940,
        "wires": [
            [
                "09971aa3069092f8"
            ]
        ]
    },
    {
        "id": "077f0978a5274f33",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "277-279",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 276,\n    'quantity': 4\n}\nmsg.topic = 'group20'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1000,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "8cb311ec932bdca1",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter20",
        "func": "if(msg.topic == 'group20'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 980,
        "wires": [
            [
                "faa09c23456da77f"
            ]
        ]
    },
    {
        "id": "96381b3a176fe7d5",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "301",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 300,\n    'quantity': 2\n}\nmsg.topic = 'group21'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1040,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "335410885f484e0d",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter21",
        "func": "if(msg.topic == 'group21'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 1020,
        "wires": [
            [
                "4ad0cbcf8179dbdc"
            ]
        ]
    },
    {
        "id": "45372847d5345db5",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "331",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 330,\n    'quantity': 2\n}\nmsg.topic = 'group22'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1080,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "6e3146cdaf1d5b8d",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter22",
        "func": "if(msg.topic == 'group22'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 1060,
        "wires": [
            [
                "b47c2d6acb4615e4"
            ]
        ]
    },
    {
        "id": "6ff23af6664d5c6a",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "498-499",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 497,\n    'quantity': 3\n}\nmsg.topic = 'group23'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1120,
        "wires": [
            [
                "948f9e8e825ea5a1"
            ]
        ]
    },
    {
        "id": "8f87d5c3cc4c41f8",
        "type": "function",
        "z": "3ecec1552952b614",
        "name": "Filter23",
        "func": "if(msg.topic == 'group23'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 1100,
        "wires": [
            [
                "d6ef78523f60929a"
            ]
        ]
    },
    {
        "id": "6942de6fc05ec6de",
        "type": "cronplus",
        "z": "3ecec1552952b614",
        "name": "cron-inject",
        "outputField": "id",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "num",
                "payload": "11",
                "expressionType": "cron",
                "expression": "*/5 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 230,
        "y": 640,
        "wires": [
            [
                "b90488d7ad0e252b",
                "38ae30d003eaa168",
                "03f272168b8a6a24",
                "b3ee2f579f6c8659",
                "0628a0340bc3662a",
                "23873c3438f4c8ae",
                "b8b01e55e5d5d0bf",
                "fd29ff0476091be8",
                "fef4fb4bc73ea9de",
                "01a04a299bee40f7",
                "bca80c37d1bed9ad",
                "0ed1250e28c7d818",
                "6d4870f821530508",
                "92b2246eae05df86",
                "94c81f8cf0f7b0bd",
                "901a65e48d40ba98",
                "174dfa57b3eace2d",
                "c87486710205ef09",
                "065cf5a07bddbb91",
                "3078bb74c436cccd",
                "077f0978a5274f33",
                "96381b3a176fe7d5",
                "45372847d5345db5",
                "6ff23af6664d5c6a"
            ]
        ]
    },
    {
        "id": "fce2d39c60b7211b",
        "type": "join",
        "z": "3ecec1552952b614",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload.data",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "10",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1830,
        "y": 660,
        "wires": [
            [
                "89fc372e08c47093"
            ]
        ]
    },
    {
        "id": "89fc372e08c47093",
        "type": "link out",
        "z": "3ecec1552952b614",
        "name": "Inv2",
        "mode": "link",
        "links": [
            "20ce3e2d70d9e33c"
        ],
        "x": 1965,
        "y": 660,
        "wires": []
    },
    {
        "id": "148f4f9c4ca35df6",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Slave_Addr",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Device_Number",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "System_Instance",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1270,
        "y": 240,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "4242cae6d7ffbd2f",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Device_State",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Device_Present",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Fault_Bitmap_0",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Fault_Bitmap_1",
                "offset": 6,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Fault_Bimap_2",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Fault_Bitmap_3",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Warning_Bitmap_0",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Inverter_Enabled_Status",
                "offset": 14,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charger_Enabled_Status",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Sell_Enabled_Status",
                "offset": 18,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Forced_Sell",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Active_Faults",
                "offset": 22,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Active_Warnings",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_Mode_Status",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1270,
        "y": 280,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "fbb3ba307f41cc49",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Configuration_Errors",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "DC_Voltage",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "DC_Current",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "DC_Power",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Temperature",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Reserved",
                "offset": 18,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Invert_DC_Current",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Invert_DC_Power",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Charge_DC_Current",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Charge_DC_Power",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_DC_Power_Percentage",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Frequency",
                "offset": 38,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Voltage",
                "offset": 40,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC1_Current",
                "offset": 44,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC1_Power",
                "offset": 48,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Input_Power (VA)",
                "offset": 52,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Input_Current",
                "offset": 56,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Input_Power (W)",
                "offset": 60,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_L1_Voltage",
                "offset": 64,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_L2_Current",
                "offset": 68,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_L2_Voltage",
                "offset": 72,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_L1_Current",
                "offset": 76,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Voltage_Qualified",
                "offset": 80,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Frequency _Qualified",
                "offset": 82,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Qualified_Duration",
                "offset": 84,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Inverter_Status",
                "offset": 88,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charger_Status",
                "offset": 90,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1270,
        "y": 320,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "c4e24d4e40d27e42",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "AC1_Voltage",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Current",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Frequency",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1270,
        "y": 360,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "867c8d20d1efaff0",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Identify_Enable",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Inverter_Enable_Disable",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Grid_Support_Sell_Enable_Disable",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Force_Sell",
                "offset": 6,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charger_Enable_Disable",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Force_Charger_State",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Operating_Mode",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Reset",
                "offset": 14,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Clear",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Search_Mode",
                "offset": 18,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Inverter_Mode",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Remote_Power_Off",
                "offset": 22,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Power_Save",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Sell_Delay_40_Sec",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_Cycle",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Charge_Rate",
                "offset": 30,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Equalize_Now",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Default_Battery_Temperature",
                "offset": 34,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "GFS_Enable",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Type",
                "offset": 38,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Nominal_Battery_Voltage",
                "offset": 40,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Bank_Capacity",
                "offset": 44,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Temperature_Coefficient",
                "offset": 46,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Grid_Support_Voltage",
                "offset": 48,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Recharge_Voltage",
                "offset": 52,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Battery_Cut_Out",
                "offset": 56,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Low_Battery_Cut_Out_Delay",
                "offset": 60,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Battery_Trigger_Set",
                "offset": 62,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Low_Battery_Trigger_Set_Delay",
                "offset": 66,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Battery_Trigger_Clear",
                "offset": 68,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Low_Battery_Trigger_Clear_Delay",
                "offset": 72,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC_Priority",
                "offset": 74,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Breaker_Size",
                "offset": 76,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC2_Breaker_Size",
                "offset": 78,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "High_Battery_Cut_Out",
                "offset": 80,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "High_Battery_Trigger_Set",
                "offset": 84,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "High_Battery_Trigger_Set_Delay",
                "offset": 88,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "High_Battery_Trigger_Clear",
                "offset": 90,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "High_Battery_Trigger_Clear Delay",
                "offset": 94,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Search_Watts",
                "offset": 96,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Search_Delay",
                "offset": 98,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Equalize_Voltage_Set_Point",
                "offset": 100,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Equalize_Support",
                "offset": 104,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Bulk_Boost_Voltage_Set_Point",
                "offset": 106,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Absorption_Voltage_Set_Point",
                "offset": 110,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Absorption_Time",
                "offset": 114,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Float_Voltage_Set_Point",
                "offset": 116,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Low_Voltage",
                "offset": 120,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_Low_Voltage",
                "offset": 124,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_High_Voltage",
                "offset": 128,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_High_Voltage",
                "offset": 132,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_Block_Start",
                "offset": 136,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_Block_Stop",
                "offset": 138,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Load_Shave_Stop",
                "offset": 140,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Load_Shave_Start",
                "offset": 142,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1270,
        "y": 640,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "1b65fc1030efe231",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "AC1_Low_FrequencyEnable",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC2_Low_Frequency",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_High_Frequency",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC2_High_Frequency",
                "offset": 6,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Load_Shave",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Grid_Support",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Maximum_Sell_Amps",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Load_Shave_Amps",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Temperature_TriggerSet",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Low_Temperature_TriggerSetDelay",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Temperature_TriggerClear",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Low_Temperature_TriggerClearDelay",
                "offset": 30,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "High_Temperature_TriggerSet",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "High_Temperature_TriggerSetDelay",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "High_Temperature_TriggerClear",
                "offset": 38,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "High_Temperature_TriggerClearDelay",
                "offset": 42,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Refresh_Configuration_Data",
                "offset": 44,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC_Output_Association_Loads",
                "offset": 46,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Association",
                "offset": 48,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Association_Grid",
                "offset": 50,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Discharge_Current",
                "offset": 52,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Discharge _TimeInterval",
                "offset": 54,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "GVS_Enable_Disable",
                "offset": 56,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Reactive_CapacitivePower",
                "offset": 58,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Reactive_Inductive_Power",
                "offset": 60,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Reactive_Power_GridVoltage",
                "offset": 62,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Minimum_Reactive_PowerGridVoltage",
                "offset": 64,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Inductive_Voltage_SetPoint",
                "offset": 66,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Capacitive_Voltage_SetPoint",
                "offset": 68,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Voltage_Threshold_to_start_stop_excitation",
                "offset": 70,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Excitation_Control_Delay_Time",
                "offset": 72,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "State_of_Charge_Level_to_Stop",
                "offset": 74,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "State_of_Charge_Stop_Delay",
                "offset": 76,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "State_of_Charge_Level_to_Start",
                "offset": 78,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "State_of_Charge_Start_Delay",
                "offset": 80,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Generator_Support_Plus",
                "offset": 82,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC_Coupling",
                "offset": 84,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Energy_Balance",
                "offset": 86,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1290,
        "y": 700,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "f4df63f892654346",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "AC1_Transfer_Switch_Delay",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC2_Transfer_Switch_Delay",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Sell_Block_Start",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Sell_Block_End",
                "offset": 6,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Auxiliary_Output_Trigger_Block Start",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Auxiliary_Output_Trigger_Block_End",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Heat_Sink_High_TemperatureTriggerSet",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Heat_Sink_High_TemperatureTriggerSet Delay",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Sell_Scale_Percentage",
                "offset": 18,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Heat_Sink_High_TemperatureTriggerClear",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Heat_Sink_High_Temperature_TriggerClearDelay",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Auxiliary_Output_TriggerSource",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Remote_Sell",
                "offset": 30,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "External_Transfer _Contactor",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC_Transient_Over_Voltage_Disconnect",
                "offset": 34,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "External_Load_Switch",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Maximum_Bulk_Charge_Current",
                "offset": 38,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Maximum_Absorption _Charge_Current",
                "offset": 42,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Maximum_Float_Charge  Current",
                "offset": 46,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1290,
        "y": 740,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "94a62ad59dfb3e00",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "AC1_Output_Power (VA)",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC_Load_Voltage",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC_Load_L1_Voltage",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC_Load_L2_Voltage",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC_Load_L1_Current",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC_Load_L2_Current",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC_Load_Current",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC_Load_Frequency",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1270,
        "y": 440,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "0f3de187e3d46fdc",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "AC1_Output_Power(W)",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1270,
        "y": 400,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "38ac93e9e3ebe865",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int32be",
                "name": "AC_Load_Power_(VA)",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_Voltage",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_Current",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "AC2_Frequency",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "AC2_Voltage_Qualified",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "AC2_Frequency _Qualified",
                "offset": 14,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1270,
        "y": 520,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "0fb92cad6db68d8e",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int32be",
                "name": "AC_Load_Power",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1270,
        "y": 480,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "621fbbaff1e13712",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "AC2_Qualified_Duration",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC_Power",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1270,
        "y": 560,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "4a32cb6fa3443bfb",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "AC2_L1_Voltage",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC2_L1_Current",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_L2_Voltage",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC2_L2_Current",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_Power _Apparent",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Auxiliary_Output_Status",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Auxiliary_Output_On_Reason",
                "offset": 22,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Auxiliary_Output_Off_Reason",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Grid_Tie_Sell_Level",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Switch_Operating_State",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Switch_Mode",
                "offset": 30,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Warning_Bitmap_1",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1270,
        "y": 600,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "25e9e20a86af90da",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int16be",
                "name": "XW_Power_Factor",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1290,
        "y": 780,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "27e0bac7a27df231",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Configuration_Status",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Configuration_Refresh_Counter",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1290,
        "y": 820,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "bcbed2334de07ce9",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Energy_From_Battery_Lifetime",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1290,
        "y": 860,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "5aa57c27c6cca995",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Battery_Charge_Active_Today",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1290,
        "y": 900,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "09971aa3069092f8",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Energy_To_Battery_Lifetime",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1290,
        "y": 940,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "faa09c23456da77f",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Grid_Input_Energy_Lifetime",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Grid_Input_Active_Lifetime",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1290,
        "y": 980,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "4ad0cbcf8179dbdc",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Grid_Output_Energy_Lifetime",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1290,
        "y": 1020,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "b47c2d6acb4615e4",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Generator_Input Active_This_Hour",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1290,
        "y": 1060,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "d6ef78523f60929a",
        "type": "buffer-parser",
        "z": "3ecec1552952b614",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Peak_Load _Shaving_Delay",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Battery_Cut_Out_Hysteresis",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1290,
        "y": 1100,
        "wires": [
            [
                "361c2aa5f6062607"
            ]
        ]
    },
    {
        "id": "a614fc35f8da3852",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "21-22",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 20,\n    'quantity': 2\n}\nmsg.topic = \"group1a\" \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 180,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "c1ee68b9adc4a563",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "31-32",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 30,\n    'quantity': 2\n}\nmsg.topic = \"group1b\" \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 220,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "86d76843830a5ee7",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "41-43",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 40,\n    'quantity': 3\n}\nmsg.topic = 'group2'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 260,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "bff7aaca141e08f9",
        "type": "modbus-flex-getter",
        "z": "9a8f3626ccc896f4",
        "name": "575071_Inverter",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "fb44781298367a59",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 810,
        "y": 660,
        "wires": [
            [],
            [
                "a0c00d4b9679aa5a",
                "ea7d2acf2f24ddc6",
                "3c3227e015593c69",
                "77b2820862a8f3c1",
                "800ce1ca78fd71f6",
                "7b05efbf005e72d6",
                "f4997dd863401d56",
                "25827d0735d2ce09",
                "61b8a601ec8ec129",
                "c5793cb42e9ed15a",
                "7982ea759bd7aeba",
                "75298543c4d1463d",
                "5f3060f8d75066f2",
                "dd8f5223e8b31553",
                "57c36643fa07fa91",
                "ad652cb2d8432e78",
                "2e838ccf08820ebe",
                "01646c060944a907",
                "b59430097dd6ef12",
                "aba0395b2c6a4692",
                "5235135d06a66773",
                "bbac39955f9fe5ca",
                "b23ffce924f337de"
            ]
        ]
    },
    {
        "id": "a0c00d4b9679aa5a",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter2",
        "func": "if(msg.topic == 'group2'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 240,
        "wires": [
            [
                "a363a3b55c5058f3"
            ]
        ]
    },
    {
        "id": "ea7d2acf2f24ddc6",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter1",
        "func": "if(msg.topic == 'group1a'){\nconst buf = Buffer.from(msg.payload.buffer);\nconst value = buf.readUInt32BE();\nmsg.payload = {'uniqueId':value};\nreturn msg;\n}\nelse if (msg.topic == 'group1b'){\n    const buf = Buffer.from(msg.payload.buffer);\n    const value = buf.readUInt32BE();\n    msg.payload = { 'FWVersion': value};\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "96aa132a3fbe0aa8",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "65-78",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 64,\n    'quantity': 14\n}\nmsg.topic = 'group3'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 300,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "3c3227e015593c69",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter3",
        "func": "if(msg.topic == 'group3'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 280,
        "wires": [
            [
                "06c0d36b148a2225"
            ]
        ]
    },
    {
        "id": "8873cc5a69a77cb6",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "79-124",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 78,\n    'quantity': 46\n}\nmsg.topic = 'group4'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 340,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "77b2820862a8f3c1",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter4",
        "func": "if(msg.topic == 'group4'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 320,
        "wires": [
            [
                "61f1479fd24f5e95"
            ]
        ]
    },
    {
        "id": "ddf64194a4fa8370",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "MessageProcessing",
        "func": "var payload = msg.payload\nmsg.payload = {\n    \"data\": payload,\n    \"model\": \"conext_gw_575071_inverter\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 660,
        "wires": [
            [
                "b4f3e5713aeed687"
            ]
        ]
    },
    {
        "id": "e0d6ef574bf4b646",
        "type": "comment",
        "z": "9a8f3626ccc896f4",
        "name": "Register Address Offset: Subtract 1 from Actual register address",
        "info": "",
        "x": 730,
        "y": 120,
        "wires": []
    },
    {
        "id": "cfcc965fbd48c79e",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "127-131",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 126, \n    'quantity': 5\n}\nmsg.topic = 'group5'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 380,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "800ce1ca78fd71f6",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter5",
        "func": "if(msg.topic == 'group5'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 360,
        "wires": [
            [
                "ceb9648db0444c61"
            ]
        ]
    },
    {
        "id": "a93130abf16777c7",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "353-430",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 352,\n    'quantity': 72\n}\nmsg.topic = 'group12'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 660,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "75298543c4d1463d",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter12",
        "func": "if(msg.topic == 'group12'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 640,
        "wires": [
            [
                "f418cc4e2f263829"
            ]
        ]
    },
    {
        "id": "4ce545822d7722d7",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "431-497",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 430,\n    'quantity': 44\n}\nmsg.topic = 'group13'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 700,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "5f3060f8d75066f2",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter13",
        "func": "if(msg.topic == 'group13'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 700,
        "wires": [
            [
                "e62e542e3773f064"
            ]
        ]
    },
    {
        "id": "3363e0b22c339af5",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "498-527",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 501,\n    'quantity': 25\n}\nmsg.topic = 'group14'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 740,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "dd8f5223e8b31553",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter14",
        "func": "if(msg.topic == 'group14'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 740,
        "wires": [
            [
                "3a6c12fe8d0ffa64"
            ]
        ]
    },
    {
        "id": "880986829f18ea3f",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "139-153",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 138, \n    'quantity': 15\n}\nmsg.topic = 'group7'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 460,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "f4997dd863401d56",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter7",
        "func": "if(msg.topic == 'group7'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            [
                "536f6c9a5ca649b7"
            ]
        ]
    },
    {
        "id": "b9b5e541ffaf38f8",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "133",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 132, \n    'quantity': 2\n}\nmsg.topic = 'group6'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 420,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "7b05efbf005e72d6",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter6",
        "func": "if(msg.topic == 'group6'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 400,
        "wires": [
            [
                "2efa10d17c1b21e5"
            ]
        ]
    },
    {
        "id": "f55f0e103e4ba0e3",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "161-169",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 160, \n    'quantity': 9\n}\nmsg.topic = 'group9'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 540,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "61b8a601ec8ec129",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter9",
        "func": "if(msg.topic == 'group9'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 520,
        "wires": [
            [
                "4528a66873a6acbf"
            ]
        ]
    },
    {
        "id": "be5d680a67c821e1",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "155",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 154, \n    'quantity': 2\n}\nmsg.topic = 'group8'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 500,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "25827d0735d2ce09",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter8",
        "func": "if(msg.topic == 'group8'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 480,
        "wires": [
            [
                "473ec9afd7f45354"
            ]
        ]
    },
    {
        "id": "94ac21665fee20c3",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "171-173",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 170, \n    'quantity': 4\n}\nmsg.topic = 'group10'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 580,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "c5793cb42e9ed15a",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter10",
        "func": "if(msg.topic == 'group10'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 560,
        "wires": [
            [
                "571c4768276564c0"
            ]
        ]
    },
    {
        "id": "ec0b9dfb0eb142ea",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "179-195",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 178, \n    'quantity': 17 \n}\nmsg.topic = 'group11'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 620,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "7982ea759bd7aeba",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter11",
        "func": "if(msg.topic == 'group11'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 600,
        "wires": [
            [
                "3af4b29b07d0641a"
            ]
        ]
    },
    {
        "id": "677ca6ed0ce84e5f",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "689",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 688,\n    'quantity': 1\n}\nmsg.topic = 'group15'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 780,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "57c36643fa07fa91",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter15",
        "func": "if(msg.topic == 'group15'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 780,
        "wires": [
            [
                "4da0c7cc689b7637"
            ]
        ]
    },
    {
        "id": "db7742823602d249",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "60-61",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 59,\n    'quantity': 3\n}\nmsg.topic = 'group16'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 820,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "ad652cb2d8432e78",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter16",
        "func": "if(msg.topic == 'group16'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 820,
        "wires": [
            [
                "a0f960eb2507f3fb"
            ]
        ]
    },
    {
        "id": "8f53eed2273f862c",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "229",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 228,\n    'quantity': 2\n}\nmsg.topic = 'group17'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 860,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "2e838ccf08820ebe",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter17",
        "func": "if(msg.topic == 'group17'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 860,
        "wires": [
            [
                "a9b41f98827cc479"
            ]
        ]
    },
    {
        "id": "02492a29aa7964a6",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "239",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 238,\n    'quantity': 2\n}\nmsg.topic = 'group18'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 900,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "01646c060944a907",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter18",
        "func": "if(msg.topic == 'group18'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 900,
        "wires": [
            [
                "9a2734aff5c735c0"
            ]
        ]
    },
    {
        "id": "b60e33fe98e48026",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "253",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 252,\n    'quantity': 2\n}\nmsg.topic = 'group19'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 940,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "b59430097dd6ef12",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter19",
        "func": "if(msg.topic == 'group19'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 940,
        "wires": [
            [
                "5719e2ec39bd2df2"
            ]
        ]
    },
    {
        "id": "49c5edb8c3570c08",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "277-279",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 276,\n    'quantity': 4\n}\nmsg.topic = 'group20'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 980,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "aba0395b2c6a4692",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter20",
        "func": "if(msg.topic == 'group20'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 980,
        "wires": [
            [
                "a2e0c2cae7c9a3f6"
            ]
        ]
    },
    {
        "id": "a49a15ac4928c1e2",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "301",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 300,\n    'quantity': 2\n}\nmsg.topic = 'group21'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1020,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "5235135d06a66773",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter21",
        "func": "if(msg.topic == 'group21'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1020,
        "wires": [
            [
                "cd0134107c91df2b"
            ]
        ]
    },
    {
        "id": "06c3b077afb6709f",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "331",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 330,\n    'quantity': 2\n}\nmsg.topic = 'group22'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1060,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "bbac39955f9fe5ca",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter22",
        "func": "if(msg.topic == 'group22'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1060,
        "wires": [
            [
                "ab32318dd43fbbd3"
            ]
        ]
    },
    {
        "id": "6958d7ebd26277d9",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "498-499",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': msg.id, \n    'address': 497,\n    'quantity': 3\n}\nmsg.topic = 'group23'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1100,
        "wires": [
            [
                "bff7aaca141e08f9"
            ]
        ]
    },
    {
        "id": "b23ffce924f337de",
        "type": "function",
        "z": "9a8f3626ccc896f4",
        "name": "Filter23",
        "func": "if(msg.topic == 'group23'){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1100,
        "wires": [
            [
                "be454d0122825fcd"
            ]
        ]
    },
    {
        "id": "f24912b1877ea809",
        "type": "cronplus",
        "z": "9a8f3626ccc896f4",
        "name": "cron-inject",
        "outputField": "id",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "num",
                "payload": "12",
                "expressionType": "cron",
                "expression": "*/5 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 230,
        "y": 660,
        "wires": [
            [
                "a614fc35f8da3852",
                "c1ee68b9adc4a563",
                "86d76843830a5ee7",
                "96aa132a3fbe0aa8",
                "8873cc5a69a77cb6",
                "cfcc965fbd48c79e",
                "b9b5e541ffaf38f8",
                "880986829f18ea3f",
                "be5d680a67c821e1",
                "f55f0e103e4ba0e3",
                "94ac21665fee20c3",
                "ec0b9dfb0eb142ea",
                "a93130abf16777c7",
                "4ce545822d7722d7",
                "3363e0b22c339af5",
                "677ca6ed0ce84e5f",
                "db7742823602d249",
                "8f53eed2273f862c",
                "02492a29aa7964a6",
                "b60e33fe98e48026",
                "49c5edb8c3570c08",
                "a49a15ac4928c1e2",
                "06c3b077afb6709f",
                "6958d7ebd26277d9"
            ]
        ]
    },
    {
        "id": "b4f3e5713aeed687",
        "type": "join",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload.data",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "10",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1730,
        "y": 660,
        "wires": [
            [
                "ee16e828ebca3b15"
            ]
        ]
    },
    {
        "id": "ee16e828ebca3b15",
        "type": "link out",
        "z": "9a8f3626ccc896f4",
        "name": "Inv3",
        "mode": "link",
        "links": [
            "20ce3e2d70d9e33c"
        ],
        "x": 1905,
        "y": 660,
        "wires": []
    },
    {
        "id": "a363a3b55c5058f3",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Slave_Addr",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Device_Number",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "System_Instance",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1230,
        "y": 240,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "06c0d36b148a2225",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Device_State",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Device_Present",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Fault_Bitmap_0",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Fault_Bitmap_1",
                "offset": 6,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Fault_Bimap_2",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Fault_Bitmap_3",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Warning_Bitmap_0",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Inverter_Enabled_Status",
                "offset": 14,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charger_Enabled_Status",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Sell_Enabled_Status",
                "offset": 18,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Forced_Sell",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Active_Faults",
                "offset": 22,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Active_Warnings",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_Mode_Status",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1230,
        "y": 280,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "61f1479fd24f5e95",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Configuration_Errors",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "DC_Voltage",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "DC_Current",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "DC_Power",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Temperature",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Reserved",
                "offset": 18,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Invert_DC_Current",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Invert_DC_Power",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Charge_DC_Current",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Charge_DC_Power",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_DC_Power_Percentage",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Frequency",
                "offset": 38,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Voltage",
                "offset": 40,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC1_Current",
                "offset": 44,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC1_Power",
                "offset": 48,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Input_Power (VA)",
                "offset": 52,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Input_Current",
                "offset": 56,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Input_Power (W)",
                "offset": 60,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_L1_Voltage",
                "offset": 64,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_L2_Current",
                "offset": 68,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_L2_Voltage",
                "offset": 72,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_L1_Current",
                "offset": 76,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Voltage_Qualified",
                "offset": 80,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Frequency _Qualified",
                "offset": 82,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Qualified_Duration",
                "offset": 84,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Inverter_Status",
                "offset": 88,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charger_Status",
                "offset": 90,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1230,
        "y": 320,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "ceb9648db0444c61",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "AC1_Voltage",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Current",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Frequency",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1230,
        "y": 360,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "f418cc4e2f263829",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Identify_Enable",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Inverter_Enable_Disable",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Grid_Support_Sell_Enable_Disable",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Force_Sell",
                "offset": 6,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charger_Enable_Disable",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Force_Charger_State",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Operating_Mode",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Reset",
                "offset": 14,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Clear",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Search_Mode",
                "offset": 18,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Inverter_Mode",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Remote_Power_Off",
                "offset": 22,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Power_Save",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Sell_Delay_40_Sec",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_Cycle",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Charge_Rate",
                "offset": 30,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Equalize_Now",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Default_Battery_Temperature",
                "offset": 34,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "GFS_Enable",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Type",
                "offset": 38,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Nominal_Battery_Voltage",
                "offset": 40,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Bank_Capacity",
                "offset": 44,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Temperature_Coefficient",
                "offset": 46,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Grid_Support_Voltage",
                "offset": 48,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Recharge_Voltage",
                "offset": 52,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Battery_Cut_Out",
                "offset": 56,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Low_Battery_Cut_Out_Delay",
                "offset": 60,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Battery_Trigger_Set",
                "offset": 62,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Low_Battery_Trigger_Set_Delay",
                "offset": 66,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Battery_Trigger_Clear",
                "offset": 68,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Low_Battery_Trigger_Clear_Delay",
                "offset": 72,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC_Priority",
                "offset": 74,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Breaker_Size",
                "offset": 76,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC2_Breaker_Size",
                "offset": 78,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "High_Battery_Cut_Out",
                "offset": 80,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "High_Battery_Trigger_Set",
                "offset": 84,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "High_Battery_Trigger_Set_Delay",
                "offset": 88,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "High_Battery_Trigger_Clear",
                "offset": 90,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "High_Battery_Trigger_Clear Delay",
                "offset": 94,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Search_Watts",
                "offset": 96,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Search_Delay",
                "offset": 98,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Equalize_Voltage_Set_Point",
                "offset": 100,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Equalize_Support",
                "offset": 104,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Bulk_Boost_Voltage_Set_Point",
                "offset": 106,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Absorption_Voltage_Set_Point",
                "offset": 110,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Absorption_Time",
                "offset": 114,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Float_Voltage_Set_Point",
                "offset": 116,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_Low_Voltage",
                "offset": 120,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_Low_Voltage",
                "offset": 124,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC1_High_Voltage",
                "offset": 128,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_High_Voltage",
                "offset": 132,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_Block_Start",
                "offset": 136,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_Block_Stop",
                "offset": 138,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Load_Shave_Stop",
                "offset": 140,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Load_Shave_Start",
                "offset": 142,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1230,
        "y": 640,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "e62e542e3773f064",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "AC1_Low_FrequencyEnable",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC2_Low_Frequency",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_High_Frequency",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC2_High_Frequency",
                "offset": 6,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Load_Shave",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Grid_Support",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Maximum_Sell_Amps",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Load_Shave_Amps",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Temperature_TriggerSet",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Low_Temperature_TriggerSetDelay",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Temperature_TriggerClear",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Low_Temperature_TriggerClearDelay",
                "offset": 30,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "High_Temperature_TriggerSet",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "High_Temperature_TriggerSetDelay",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "High_Temperature_TriggerClear",
                "offset": 38,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "High_Temperature_TriggerClearDelay",
                "offset": 42,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Refresh_Configuration_Data",
                "offset": 44,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC_Output_Association_Loads",
                "offset": 46,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Association",
                "offset": 48,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC1_Association_Grid",
                "offset": 50,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Discharge_Current",
                "offset": 52,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Discharge _TimeInterval",
                "offset": 54,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "GVS_Enable_Disable",
                "offset": 56,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Reactive_CapacitivePower",
                "offset": 58,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Reactive_Inductive_Power",
                "offset": 60,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Reactive_Power_GridVoltage",
                "offset": 62,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Minimum_Reactive_PowerGridVoltage",
                "offset": 64,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Inductive_Voltage_SetPoint",
                "offset": 66,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Capacitive_Voltage_SetPoint",
                "offset": 68,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Voltage_Threshold_to_start_stop_excitation",
                "offset": 70,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Excitation_Control_Delay_Time",
                "offset": 72,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "State_of_Charge_Level_to_Stop",
                "offset": 74,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "State_of_Charge_Stop_Delay",
                "offset": 76,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "State_of_Charge_Level_to_Start",
                "offset": 78,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "State_of_Charge_Start_Delay",
                "offset": 80,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Generator_Support_Plus",
                "offset": 82,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC_Coupling",
                "offset": 84,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Battery_Energy_Balance",
                "offset": 86,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1250,
        "y": 700,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "3a6c12fe8d0ffa64",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "AC1_Transfer_Switch_Delay",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC2_Transfer_Switch_Delay",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Sell_Block_Start",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Sell_Block_End",
                "offset": 6,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Auxiliary_Output_Trigger_Block Start",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Auxiliary_Output_Trigger_Block_End",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Heat_Sink_High_TemperatureTriggerSet",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Heat_Sink_High_TemperatureTriggerSet Delay",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Maximum_Sell_Scale_Percentage",
                "offset": 18,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Heat_Sink_High_TemperatureTriggerClear",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Heat_Sink_High_Temperature_TriggerClearDelay",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Auxiliary_Output_TriggerSource",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Remote_Sell",
                "offset": 30,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "External_Transfer _Contactor",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC_Transient_Over_Voltage_Disconnect",
                "offset": 34,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "External_Load_Switch",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Maximum_Bulk_Charge_Current",
                "offset": 38,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Maximum_Absorption _Charge_Current",
                "offset": 42,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Maximum_Float_Charge  Current",
                "offset": 46,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1250,
        "y": 740,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "536f6c9a5ca649b7",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "AC1_Output_Power (VA)",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC_Load_Voltage",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC_Load_L1_Voltage",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC_Load_L2_Voltage",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC_Load_L1_Current",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC_Load_L2_Current",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC_Load_Current",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "AC_Load_Frequency",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1230,
        "y": 440,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "2efa10d17c1b21e5",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "AC1_Output_Power(W)",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1230,
        "y": 400,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "4528a66873a6acbf",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int32be",
                "name": "AC_Load_Power_(VA)",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_Voltage",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_Current",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "AC2_Frequency",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "AC2_Voltage_Qualified",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "AC2_Frequency _Qualified",
                "offset": 14,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1230,
        "y": 520,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "473ec9afd7f45354",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int32be",
                "name": "AC_Load_Power",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1230,
        "y": 480,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "571c4768276564c0",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "AC2_Qualified_Duration",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC_Power",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1230,
        "y": 560,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "3af4b29b07d0641a",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "AC2_L1_Voltage",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC2_L1_Current",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_L2_Voltage",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "AC2_L2_Current",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "AC2_Power _Apparent",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Auxiliary_Output_Status",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Auxiliary_Output_On_Reason",
                "offset": 22,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Auxiliary_Output_Off_Reason",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Grid_Tie_Sell_Level",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Switch_Operating_State",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Switch_Mode",
                "offset": 30,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Warning_Bitmap_1",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1230,
        "y": 600,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "4da0c7cc689b7637",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int16be",
                "name": "XW_Power_Factor",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1250,
        "y": 780,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "a0f960eb2507f3fb",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Configuration_Status",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Configuration_Refresh_Counter",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1250,
        "y": 820,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "a9b41f98827cc479",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Energy_From_Battery_Lifetime",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1250,
        "y": 860,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "9a2734aff5c735c0",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Battery_Charge_Active_Today",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1250,
        "y": 900,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "5719e2ec39bd2df2",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Energy_To_Battery_Lifetime",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1250,
        "y": 940,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "a2e0c2cae7c9a3f6",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Grid_Input_Energy_Lifetime",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Grid_Input_Active_Lifetime",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1250,
        "y": 980,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "cd0134107c91df2b",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Grid_Output_Energy_Lifetime",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1250,
        "y": 1020,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "ab32318dd43fbbd3",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Generator_Input Active_This_Hour",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1250,
        "y": 1060,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "be454d0122825fcd",
        "type": "buffer-parser",
        "z": "9a8f3626ccc896f4",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Peak_Load _Shaving_Delay",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "Low_Battery_Cut_Out_Hysteresis",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1250,
        "y": 1100,
        "wires": [
            [
                "ddf64194a4fa8370"
            ]
        ]
    },
    {
        "id": "78e098060b3daac1",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "a01b9d81d301bca7",
        "name": "Inv1",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': 10, \n    'address': 64,\n    'quantity': 1\n}\nmsg.topic = 'group1'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 300,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "962589460ebece7a",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "a01b9d81d301bca7",
        "name": "Inv2",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 11,\n    'address': 64,\n    'quantity': 1\n}\nmsg.topic = 'group1'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 340,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "d0e93b16635a6356",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "a01b9d81d301bca7",
        "name": "Inv3",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 12,\n    'address': 64,\n    'quantity': 1\n}\nmsg.topic = 'group1'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 380,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "99caa5cb4d544ac3",
        "type": "modbus-flex-getter",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "fb44781298367a59",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1010,
        "y": 1160,
        "wires": [
            [],
            [
                "6193c3022cd413e6",
                "b2e973f5d9e2c0ce",
                "9401bddaa05d0098",
                "ddec2b73c11ce526",
                "2371b8b207a8591d",
                "fd307c9114d1786c",
                "d9ef1d3ce8722ecf",
                "f2ad5952ee27578d",
                "27da857b9edc43d4",
                "f8cef19809709146"
            ]
        ]
    },
    {
        "id": "9619c56e0a1d3430",
        "type": "buffer-parser",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Device_State",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1470,
        "y": 660,
        "wires": [
            [
                "88e0e4505da1afbc"
            ]
        ]
    },
    {
        "id": "88e0e4505da1afbc",
        "type": "join",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1630,
        "y": 660,
        "wires": [
            [
                "a766a485535edcad"
            ]
        ]
    },
    {
        "id": "a766a485535edcad",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "function 1",
        "func": "var inv1 = msg.payload[0].Device_State\nvar inv2 = msg.payload[1].Device_State\nvar inv3 = msg.payload[2].Device_State\nvar data = {}\nif(inv1 == 3 && inv2 == 3 && inv3 == 3){\n    data['InverterConnection'] = \"Online\"\n    data['InverterAssetStatus'] = \"Operating\"\n}\nelse{\n    data['InverterConnection'] = \"Offline\"\n    data['InverterAssetStatus'] = \"Standby\"\n}\nmsg.payload= data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 660,
        "wires": [
            [
                "1b4ba30c3414950a"
            ]
        ]
    },
    {
        "id": "6193c3022cd413e6",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "Filter1",
        "func": "if (msg.topic == 'group1') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 660,
        "wires": [
            [
                "9619c56e0a1d3430"
            ]
        ]
    },
    {
        "id": "373d3f62f8168c0b",
        "type": "buffer-parser",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Fault_State",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1470,
        "y": 720,
        "wires": [
            [
                "bc79177b6d4829ad"
            ]
        ]
    },
    {
        "id": "bc79177b6d4829ad",
        "type": "join",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1630,
        "y": 720,
        "wires": [
            [
                "230d556c880ec7b9"
            ]
        ]
    },
    {
        "id": "230d556c880ec7b9",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "function 2",
        "func": "var inv1 = msg.payload[0].Fault_State\nvar inv2 = msg.payload[1].Fault_State\nvar inv3 = msg.payload[2].Fault_State\nvar data = {}\nif(inv1 == 1 || inv2 == 1 || inv3 == 1){\n    data['InverterFaults'] = \"Active\"\n}\nelse{\n    data['InverterFaults'] = \"InActive\"\n}\nmsg.payload= data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 720,
        "wires": [
            [
                "1b4ba30c3414950a"
            ]
        ]
    },
    {
        "id": "b2e973f5d9e2c0ce",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "Filter2",
        "func": "if (msg.topic == 'group2') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 720,
        "wires": [
            [
                "373d3f62f8168c0b"
            ]
        ]
    },
    {
        "id": "01f25421206e984b",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "c50ed32420e10603",
        "name": "Inv1",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': 10, \n    'address': 75,\n    'quantity': 1\n}\nmsg.topic = 'group2'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 480,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "8017d5cb8c8e0d81",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "c50ed32420e10603",
        "name": "Inv2",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 11,\n    'address': 75,\n    'quantity': 1\n}\nmsg.topic = 'group2'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 520,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "3638fbb5c67d6124",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "c50ed32420e10603",
        "name": "Inv3",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 12,\n    'address': 75,\n    'quantity': 1\n}\nmsg.topic = 'group2'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 560,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "9a0df159c7d10c3e",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "e48eb7d00661c99c",
        "name": "Inv1",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': 10, \n    'address': 76,\n    'quantity': 1\n}\nmsg.topic = 'group3'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 680,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "27dff83bc91560a0",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "e48eb7d00661c99c",
        "name": "Inv2",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 11,\n    'address': 76,\n    'quantity': 1\n}\nmsg.topic = 'group3'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 720,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "33f317dcd0d4e9cb",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "e48eb7d00661c99c",
        "name": "Inv3",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 12,\n    'address': 76,\n    'quantity': 1\n}\nmsg.topic = 'group3'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 760,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "56a13c56304bd64b",
        "type": "buffer-parser",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Warning_State",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1470,
        "y": 780,
        "wires": [
            [
                "ae73af15b49dfe18"
            ]
        ]
    },
    {
        "id": "ae73af15b49dfe18",
        "type": "join",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1630,
        "y": 780,
        "wires": [
            [
                "e450266404d849f9"
            ]
        ]
    },
    {
        "id": "e450266404d849f9",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "function 3",
        "func": "var inv1 = msg.payload[0].Warning_State\nvar inv2 = msg.payload[1].Warning_State\nvar inv3 = msg.payload[2].Warning_State\nvar data = {}\nif (inv1 == 1 || inv2 == 1 || inv3 == 1) {\n    data['InverterWarning'] = \"Active\"\n}\nelse {\n    data['InverterWarning'] = \"InActive\"\n}\nmsg.payload = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 780,
        "wires": [
            [
                "1b4ba30c3414950a"
            ]
        ]
    },
    {
        "id": "9401bddaa05d0098",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "Filter3",
        "func": "if (msg.topic == 'group3') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 780,
        "wires": [
            [
                "56a13c56304bd64b"
            ]
        ]
    },
    {
        "id": "3c744b82a1ad0399",
        "type": "buffer-parser",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int32be",
                "name": "DC_Current",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1470,
        "y": 840,
        "wires": [
            [
                "1521d0742cb42aed"
            ]
        ]
    },
    {
        "id": "1521d0742cb42aed",
        "type": "join",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1630,
        "y": 840,
        "wires": [
            [
                "464d6761534c0125"
            ]
        ]
    },
    {
        "id": "464d6761534c0125",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "function 4",
        "func": "var inv1 = msg.payload[0].DC_Current\nvar inv2 = msg.payload[1].DC_Current\nvar inv3 = msg.payload[2].DC_Current\nvar data = {}\nif (inv1 < -5 || inv2 < -5 || inv3 < -5){\n    data['InverterStatus'] = \"Discharging\"\n}\nelse if (inv1 > 5 || inv2 > 5 || inv3 > 5){\n    data['InverterStatus'] = \"Charging\"\n}\nelse{\n    data['InverterStatus'] = \"Idle\"\n}\nmsg.payload= data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 840,
        "wires": [
            [
                "1b4ba30c3414950a"
            ]
        ]
    },
    {
        "id": "ddec2b73c11ce526",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "Filter4",
        "func": "if (msg.topic == 'group4') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 840,
        "wires": [
            [
                "3c744b82a1ad0399"
            ]
        ]
    },
    {
        "id": "1710353712cc2cdb",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "55765ce5d5599b74",
        "name": "Inv1",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': 10, \n    'address': 82,\n    'quantity': 2\n}\nmsg.topic = 'group4'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 860,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "331e43a05655d0ee",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "55765ce5d5599b74",
        "name": "Inv2",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 11,\n    'address': 82,\n    'quantity': 2\n}\nmsg.topic = 'group4'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 900,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "f7e9309a7b14473b",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "55765ce5d5599b74",
        "name": "Inv3",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 12,\n    'address': 82,\n    'quantity': 2\n}\nmsg.topic = 'group4'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 940,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "b2971b99d0632aec",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "6376a83c1da5ed94",
        "name": "Inv1",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': 10, \n    'address': 86,\n    'quantity': 1\n}\nmsg.topic = 'group5'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1040,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "9040693354856b37",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "6376a83c1da5ed94",
        "name": "Inv2",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 11,\n    'address': 86,\n    'quantity': 1\n}\nmsg.topic = 'group5'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1080,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "bf87db9569a0a3ad",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "6376a83c1da5ed94",
        "name": "Inv3",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 12,\n    'address': 86,\n    'quantity': 1\n}\nmsg.topic = 'group5'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1120,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "7a0bc9b128113f96",
        "type": "buffer-parser",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Battery_temperature",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1470,
        "y": 900,
        "wires": [
            [
                "0de221790a0ebc5f"
            ]
        ]
    },
    {
        "id": "0de221790a0ebc5f",
        "type": "join",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1630,
        "y": 900,
        "wires": [
            [
                "2f3f68ecd25fa24e"
            ]
        ]
    },
    {
        "id": "2f3f68ecd25fa24e",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "function 5",
        "func": "var inv1 = msg.payload[0].Battery_temperature\nvar inv2 = msg.payload[1].Battery_temperature\nvar inv3 = msg.payload[2].Battery_temperature\nvar data = {}\ndata['InverterAmbientTemperatureC'] = parseFloat(((inv1+inv2+inv3)/3).toFixed(2))\ndata['InverterAmbientTemperatureF'] = parseFloat(((((((inv1 + inv2 + inv3) / 3)) * 9) / 5) + 32).toFixed(2))\nmsg.payload= data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 900,
        "wires": [
            [
                "1b4ba30c3414950a"
            ]
        ]
    },
    {
        "id": "2371b8b207a8591d",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "Filter5",
        "func": "if (msg.topic == 'group5') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 900,
        "wires": [
            [
                "7a0bc9b128113f96"
            ]
        ]
    },
    {
        "id": "667f2dcaae13527b",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "a47b56bbe0c5f633",
        "name": "Inv1",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': 10, \n    'address': 154,\n    'quantity': 2\n}\nmsg.topic = 'group6'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1220,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "aaa6ea4764284c1e",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "a47b56bbe0c5f633",
        "name": "Inv2",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 11,\n    'address': 154,\n    'quantity': 2\n}\nmsg.topic = 'group6'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1260,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "a3bf1cfb970ddc9e",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "a47b56bbe0c5f633",
        "name": "Inv3",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 12,\n    'address': 154,\n    'quantity': 2\n}\nmsg.topic = 'group6'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1300,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "1eecf4d7960c9ff1",
        "type": "buffer-parser",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int32be",
                "name": "AC_Load_Power",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1490,
        "y": 1420,
        "wires": [
            [
                "1ba7aa763e173234"
            ]
        ]
    },
    {
        "id": "1ba7aa763e173234",
        "type": "join",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1650,
        "y": 1420,
        "wires": [
            [
                "ac9b924406588268"
            ]
        ]
    },
    {
        "id": "ac9b924406588268",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "function 6",
        "func": "var inv1 = msg.payload[0].AC_Load_Power\nvar inv2 = msg.payload[1].AC_Load_Power\nvar inv3 = msg.payload[2].AC_Load_Power\nvar data = {}\ndata['InverterACLoadPower'] = parseFloat((inv1+inv2+inv3).toFixed(2))\nmsg.payload= data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 1420,
        "wires": [
            [
                "1b4ba30c3414950a"
            ]
        ]
    },
    {
        "id": "fd307c9114d1786c",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "Filter6",
        "func": "if (msg.topic == 'group6') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1420,
        "wires": [
            [
                "1eecf4d7960c9ff1"
            ]
        ]
    },
    {
        "id": "e1b646f7898386e9",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "fa481a3fc6ed5e27",
        "name": "Inv1",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': 10, \n    'address': 228,\n    'quantity': 2\n}\nmsg.topic = 'group7'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1400,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "75fc8d57129c9934",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "fa481a3fc6ed5e27",
        "name": "Inv2",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 11,\n    'address': 228,\n    'quantity': 2\n}\nmsg.topic = 'group7'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1440,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "9efb7d024866b9aa",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "fa481a3fc6ed5e27",
        "name": "Inv3",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 12,\n    'address': 228,\n    'quantity': 2\n}\nmsg.topic = 'group7'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1480,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "2e21dd33dcca010a",
        "type": "buffer-parser",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Energy_Battery_Lifetime",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1490,
        "y": 1480,
        "wires": [
            [
                "39cb5a6a9b06991e"
            ]
        ]
    },
    {
        "id": "39cb5a6a9b06991e",
        "type": "join",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1650,
        "y": 1480,
        "wires": [
            [
                "92a0a7ee7c35ef9f"
            ]
        ]
    },
    {
        "id": "92a0a7ee7c35ef9f",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "function 7",
        "func": "var inv1 = msg.payload[0].Energy_Battery_Lifetime\nvar inv2 = msg.payload[1].Energy_Battery_Lifetime\nvar inv3 = msg.payload[2].Energy_Battery_Lifetime\nvar data = {}\ndata['InverterBatteryLifetime'] = parseFloat((inv1+inv2+inv3).toFixed(2))\nmsg.payload= data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 1480,
        "wires": [
            [
                "1b4ba30c3414950a"
            ]
        ]
    },
    {
        "id": "d9ef1d3ce8722ecf",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "Filter7",
        "func": "if (msg.topic == 'group7') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1480,
        "wires": [
            [
                "2e21dd33dcca010a"
            ]
        ]
    },
    {
        "id": "1b4ba30c3414950a",
        "type": "join",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "13",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2090,
        "y": 1140,
        "wires": [
            [
                "b6551a22a8b88c64",
                "195fd0edc2cc92e3"
            ]
        ]
    },
    {
        "id": "6526ddc8042dc64d",
        "type": "cronplus",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */3 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 300,
        "y": 140,
        "wires": [
            [
                "d92b71a1c1fc0389"
            ]
        ]
    },
    {
        "id": "d92b71a1c1fc0389",
        "type": "link out",
        "z": "d7c2a5bc0460c6ff",
        "name": "Sch1",
        "mode": "link",
        "links": [
            "59d0c063123b031c"
        ],
        "x": 535,
        "y": 140,
        "wires": []
    },
    {
        "id": "59d0c063123b031c",
        "type": "link in",
        "z": "d7c2a5bc0460c6ff",
        "name": "sch2",
        "links": [
            "d92b71a1c1fc0389"
        ],
        "x": 125,
        "y": 1180,
        "wires": [
            [
                "9efb7d024866b9aa",
                "75fc8d57129c9934",
                "e1b646f7898386e9",
                "a3bf1cfb970ddc9e",
                "aaa6ea4764284c1e",
                "667f2dcaae13527b",
                "bf87db9569a0a3ad",
                "9040693354856b37",
                "b2971b99d0632aec",
                "f7e9309a7b14473b",
                "331e43a05655d0ee",
                "1710353712cc2cdb",
                "33f317dcd0d4e9cb",
                "27dff83bc91560a0",
                "9a0df159c7d10c3e",
                "3638fbb5c67d6124",
                "8017d5cb8c8e0d81",
                "01f25421206e984b",
                "962589460ebece7a",
                "d0e93b16635a6356",
                "78e098060b3daac1",
                "37c20b173b5f8299",
                "fa2eddf29b068c09",
                "40254854636c579d",
                "af560c74ad45e313",
                "788ee9f7a38b9084",
                "e4ce99bdc4e25009",
                "ed5c532e1321face",
                "0d761ebb298d84e8",
                "2ccd4c827ff09b5a"
            ]
        ]
    },
    {
        "id": "b6551a22a8b88c64",
        "type": "change",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Inv",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2390,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "37c20b173b5f8299",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "9bddbfc00a503b94",
        "name": "Inv1",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': 10, \n    'address': 503,\n    'quantity': 2\n}\nmsg.topic = 'group8'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1580,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "fa2eddf29b068c09",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "9bddbfc00a503b94",
        "name": "Inv2",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 11,\n    'address': 503,\n    'quantity': 2\n}\nmsg.topic = 'group8'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1620,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "40254854636c579d",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "9bddbfc00a503b94",
        "name": "Inv3",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 12,\n    'address': 503,\n    'quantity': 2\n}\nmsg.topic = 'group8'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1660,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "af560c74ad45e313",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "516f7bb3feac31b6",
        "name": "Inv1",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': 10, \n    'address': 426,\n    'quantity': 2\n}\nmsg.topic = 'group9'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1760,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "788ee9f7a38b9084",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "516f7bb3feac31b6",
        "name": "Inv2",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 11,\n    'address': 426,\n    'quantity': 2\n}\nmsg.topic = 'group9'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1800,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "e4ce99bdc4e25009",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "516f7bb3feac31b6",
        "name": "Inv3",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 12,\n    'address': 426,\n    'quantity': 2\n}\nmsg.topic = 'group9'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1840,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "16ee983a0640201f",
        "type": "buffer-parser",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Sell_Block_Start",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Sell_Block_End",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1490,
        "y": 1540,
        "wires": [
            [
                "c4558ddc3fab20bc"
            ]
        ]
    },
    {
        "id": "c4558ddc3fab20bc",
        "type": "join",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1650,
        "y": 1540,
        "wires": [
            [
                "b789ce78c3e128ce"
            ]
        ]
    },
    {
        "id": "b789ce78c3e128ce",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "function 8",
        "func": "var inv1_start = msg.payload[0].Sell_Block_Start\nvar inv1_end = msg.payload[1].Sell_Block_End\nvar data = {}\ndata['InverterSellBlockStart'] = inv1_start\ndata['InverterSellBlockEnd'] = inv1_end\nmsg.payload= data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 1540,
        "wires": [
            [
                "1b4ba30c3414950a"
            ]
        ]
    },
    {
        "id": "f2ad5952ee27578d",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "Filter8",
        "func": "if (msg.topic == 'group8') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1540,
        "wires": [
            [
                "16ee983a0640201f"
            ]
        ]
    },
    {
        "id": "75a9abc70df733b1",
        "type": "buffer-parser",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "Charge_block_start",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Charge_block_end",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1490,
        "y": 1600,
        "wires": [
            [
                "2f6f33584deb0f4b"
            ]
        ]
    },
    {
        "id": "2f6f33584deb0f4b",
        "type": "join",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1650,
        "y": 1600,
        "wires": [
            [
                "6a025068f2e61e78"
            ]
        ]
    },
    {
        "id": "6a025068f2e61e78",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "function 9",
        "func": "var inv1_start = msg.payload[0].Charge_block_start\nvar inv1_end = msg.payload[1].Charge_block_end\nvar data = {}\ndata['InverterChargeBlockStart'] = inv1_start\ndata['InverterChargeBlockEnd'] = inv1_end\nmsg.payload = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 1600,
        "wires": [
            [
                "1b4ba30c3414950a"
            ]
        ]
    },
    {
        "id": "27da857b9edc43d4",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "Filter9",
        "func": "if (msg.topic == 'group9') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1600,
        "wires": [
            [
                "75a9abc70df733b1"
            ]
        ]
    },
    {
        "id": "ed5c532e1321face",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "ae35de366ad5e152",
        "name": "Inv1",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': 10, \n    'address': 436,\n    'quantity': 2\n}\nmsg.topic = 'group10'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1960,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "0d761ebb298d84e8",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "ae35de366ad5e152",
        "name": "Inv2",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 11,\n    'address': 436,\n    'quantity': 2\n}\nmsg.topic = 'group10'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2000,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "2ccd4c827ff09b5a",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "g": "ae35de366ad5e152",
        "name": "Inv3",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 12,\n    'address': 436,\n    'quantity': 2\n}\nmsg.topic = 'group10'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2040,
        "wires": [
            [
                "99caa5cb4d544ac3"
            ]
        ]
    },
    {
        "id": "47ca22d24f7a1fd6",
        "type": "buffer-parser",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "Maximum_Sell_Amps",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 1490,
        "y": 1660,
        "wires": [
            [
                "cbc4252cbff9db2c"
            ]
        ]
    },
    {
        "id": "cbc4252cbff9db2c",
        "type": "join",
        "z": "d7c2a5bc0460c6ff",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1650,
        "y": 1660,
        "wires": [
            [
                "275fad62cf0eb3ee"
            ]
        ]
    },
    {
        "id": "275fad62cf0eb3ee",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "function 10",
        "func": "var inv1 = msg.payload[0].Maximum_Sell_Amps\nvar inv2 = msg.payload[1].Maximum_Sell_Amps\nvar inv3 = msg.payload[2].Maximum_Sell_Amps\nvar data = {}\ndata['GridSellPower'] = parseFloat(((inv1 + inv2 + inv3) * 0.12).toFixed(2))\nmsg.payload = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 1660,
        "wires": [
            [
                "1b4ba30c3414950a"
            ]
        ]
    },
    {
        "id": "f8cef19809709146",
        "type": "function",
        "z": "d7c2a5bc0460c6ff",
        "name": "Filter10",
        "func": "if (msg.topic == 'group10') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 1660,
        "wires": [
            [
                "47ca22d24f7a1fd6"
            ]
        ]
    },
    {
        "id": "195fd0edc2cc92e3",
        "type": "debug",
        "z": "d7c2a5bc0460c6ff",
        "name": "debug.Inverter",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2380,
        "y": 900,
        "wires": []
    },
    {
        "id": "b785eb2fcdadf47c",
        "type": "modbus-flex-getter",
        "z": "f1f5fb5862a7667d",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "ff919ca25c0fe87f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 570,
        "y": 240,
        "wires": [
            [],
            [
                "702c4b07feb06aaa",
                "37b126a4b68eff72",
                "2c9d2bf4c5ed1280"
            ]
        ]
    },
    {
        "id": "46e7315647ae3be8",
        "type": "function",
        "z": "f1f5fb5862a7667d",
        "name": "Basic Registers",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': 15, \n    'address': 1000,\n    'quantity': 34\n}\nmsg.topic = 'group1'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 160,
        "wires": [
            [
                "b785eb2fcdadf47c"
            ]
        ]
    },
    {
        "id": "73d567a451610d67",
        "type": "function",
        "z": "f1f5fb5862a7667d",
        "name": "Advanced Registers",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': 15, \n    'address': 1100,\n    'quantity': 82\n}\nmsg.topic = 'group2'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 200,
        "wires": [
            [
                "b785eb2fcdadf47c"
            ]
        ]
    },
    {
        "id": "aa0bf59192ebe382",
        "type": "function",
        "z": "f1f5fb5862a7667d",
        "name": "Diagnostic Registers",
        "func": "msg.payload = { \n    'fc': 3, \n    'unitid': 15, \n    'address': 1700,\n    'quantity': 23\n}\nmsg.topic = 'group3'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 240,
        "wires": [
            [
                "b785eb2fcdadf47c"
            ]
        ]
    },
    {
        "id": "702c4b07feb06aaa",
        "type": "function",
        "z": "f1f5fb5862a7667d",
        "name": "Filter1",
        "func": "if (msg.topic == 'group1') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 160,
        "wires": [
            [
                "222c7e3599729647"
            ]
        ]
    },
    {
        "id": "37b126a4b68eff72",
        "type": "function",
        "z": "f1f5fb5862a7667d",
        "name": "Filter2",
        "func": "if (msg.topic == 'group2') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 200,
        "wires": [
            [
                "334ceb2edb1a1d5a"
            ]
        ]
    },
    {
        "id": "2c9d2bf4c5ed1280",
        "type": "function",
        "z": "f1f5fb5862a7667d",
        "name": "Filter3",
        "func": "if (msg.topic == 'group3') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 240,
        "wires": [
            [
                "1ecf31499717c26d"
            ]
        ]
    },
    {
        "id": "222c7e3599729647",
        "type": "buffer-parser",
        "z": "f1f5fb5862a7667d",
        "name": "Basic Registers",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatle",
                "name": "EnergySum",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyPosSum",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergySumNR",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyPosSumNR",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerSum",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerA",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerB",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerC",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "VoltAvgLN",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "VoltA",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "VoltB",
                "offset": 40,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "VoltC",
                "offset": 44,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "VoltAvgLL",
                "offset": 48,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "VoltAB",
                "offset": 52,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "VoltBC",
                "offset": 56,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "VoltAC",
                "offset": 60,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "Freq",
                "offset": 64,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "swap16",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 920,
        "y": 160,
        "wires": [
            [
                "97ce5725a310c8da"
            ]
        ]
    },
    {
        "id": "334ceb2edb1a1d5a",
        "type": "buffer-parser",
        "z": "f1f5fb5862a7667d",
        "name": "Advanced Registers",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatle",
                "name": "EnergyA",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnerygB",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyC",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyPosA",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyPosB",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyPosC",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyNegSum",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyNegSumNR",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyNegA",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyNegB",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyNegC",
                "offset": 40,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyReacSum",
                "offset": 44,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyReacA",
                "offset": 48,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyReacB",
                "offset": 52,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyReacC",
                "offset": 56,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyAppSum",
                "offset": 60,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyAppA",
                "offset": 64,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyAppB",
                "offset": 68,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "EnergyAppC",
                "offset": 72,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerFactorAvg",
                "offset": 76,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerFactorA",
                "offset": 80,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerFactorB",
                "offset": 84,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerFactorC",
                "offset": 88,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerReacSum",
                "offset": 92,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerReacA",
                "offset": 96,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerReacB",
                "offset": 100,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerReacC",
                "offset": 104,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerAppSum",
                "offset": 108,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerAppA",
                "offset": 112,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerAppB",
                "offset": 116,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "PowerAppC",
                "offset": 120,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "CurrentA",
                "offset": 124,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "CurrentB",
                "offset": 128,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "CurrentC",
                "offset": 132,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "Demand",
                "offset": 136,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "DemandMin",
                "offset": 140,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "DemandMax",
                "offset": 144,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "DemandApp",
                "offset": 148,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "DemandA",
                "offset": 152,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "DemandB",
                "offset": 156,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "DemandC",
                "offset": 160,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "swap16",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 940,
        "y": 200,
        "wires": [
            [
                "97ce5725a310c8da"
            ]
        ]
    },
    {
        "id": "1ecf31499717c26d",
        "type": "buffer-parser",
        "z": "f1f5fb5862a7667d",
        "name": "Diagnostic Registers",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32le",
                "name": "SerialNumber",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32le",
                "name": "UptimeSecs",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32le",
                "name": "TotalSecs",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "Model",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "Version",
                "offset": 14,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "Options",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "ErrorStatus",
                "offset": 18,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "PowerFailCount",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "CrcErrorCount",
                "offset": 22,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "FrameErrorCount",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "PacketErrorCount",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "OverrunCount",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "ErrorStatus1",
                "offset": 30,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "ErrorStatus2",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "ErrorStatus3",
                "offset": 34,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "ErrorStatus4",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "ErrorStatus5",
                "offset": 38,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "ErrorStatus6",
                "offset": 40,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "ErrorStatus7",
                "offset": 42,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16le",
                "name": "ErrorStatus8",
                "offset": 44,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "swap16",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 940,
        "y": 240,
        "wires": [
            [
                "97ce5725a310c8da"
            ]
        ]
    },
    {
        "id": "bfd81e3ce60aef34",
        "type": "change",
        "z": "f1f5fb5862a7667d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Wattnode",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "97ce5725a310c8da",
        "type": "join",
        "z": "f1f5fb5862a7667d",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1130,
        "y": 240,
        "wires": [
            [
                "bfd81e3ce60aef34",
                "d9e94cf843c94746"
            ]
        ]
    },
    {
        "id": "af695a6763203fe2",
        "type": "cronplus",
        "z": "f1f5fb5862a7667d",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */1 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 140,
        "y": 240,
        "wires": [
            [
                "46e7315647ae3be8",
                "73d567a451610d67",
                "aa0bf59192ebe382"
            ]
        ]
    },
    {
        "id": "d9e94cf843c94746",
        "type": "debug",
        "z": "f1f5fb5862a7667d",
        "name": "debug wattnode",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 200,
        "wires": []
    },
    {
        "id": "3e44c5a395275688",
        "type": "function",
        "z": "3ed1b5dba556babc",
        "name": "IOTHubParser",
        "func": "var payload = msg.payload\npayload['timestamp'] = Date.now()\npayload['type'] = \"BMS\"\nmsg.payload = {\n    \"deviceId\": \"627491-565966-575071-inverter\",\n    \"key\": \"6I90lqfCcDSEK1vJC2cdOvvSKBNCrGJ66ZPznwl/Z1k=\",\n    \"protocol\": \"mqtt\",\n    \"data\": payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 200,
        "wires": [
            [
                "df1329e791d299e1"
            ]
        ]
    },
    {
        "id": "6bdd2d5fa313811e",
        "type": "function",
        "z": "3ed1b5dba556babc",
        "name": "MessageProcessing",
        "func": "var data = {}\nvar payload = []\nvar devices = []\nvar hostname = env.get(\"bess-serial-number\")\nvar uuid = global.get(\"uuid\")\ndata['data'] = msg.payload\ndata['model'] = \"\"\npayload.push(data)\nvar final_payload = {\n    \"telemetry\": payload,\n    \"device\": \"627491-565966-575071-inverter\",\n    \"uuid\": uuid\n}\ndevices.push(final_payload)\nmsg.payload = {\n\"devices\": devices,\n\"device_type\": \"conext_gw_503\",\n\"gateway_id\": hostname\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 200,
        "wires": [
            [
                "3e44c5a395275688"
            ]
        ]
    },
    {
        "id": "327a49a20b04f6b0",
        "type": "function",
        "z": "3ed1b5dba556babc",
        "name": "CombinePayload",
        "func": "var BMS = global.get(\"BMS\") || {}\nvar Inv = global.get(\"Inv\") || {}\nvar Wattnode = global.get(\"Wattnode\") || {}\nvar data = Object.assign({}, BMS, Inv)\nvar final_data = Object.assign({}, data, Wattnode)\nif(BMS != undefined && Inv != undefined && Wattnode != undefined){\nmsg.payload = final_data\nreturn msg;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 200,
        "wires": [
            [
                "6bdd2d5fa313811e",
                "18eb7872a02c2a74"
            ]
        ]
    },
    {
        "id": "8759b3290ea74ec1",
        "type": "inject",
        "z": "3ed1b5dba556babc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "327a49a20b04f6b0",
                "3523d2ba505d1f82"
            ]
        ]
    },
    {
        "id": "3523d2ba505d1f82",
        "type": "exec",
        "z": "3ed1b5dba556babc",
        "command": "find /data/backup/* -mtime +30 -exec rm {} \\; ",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Delete File Older than 30 days",
        "x": 430,
        "y": 580,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9f298fc737327e0d",
        "type": "file",
        "z": "3ed1b5dba556babc",
        "g": "9cc59ec911186553",
        "name": "StoreJSONFile to PersistentVolume",
        "filename": "filename",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 900,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "18eb7872a02c2a74",
        "type": "function",
        "z": "3ed1b5dba556babc",
        "g": "9cc59ec911186553",
        "name": "LocalStorage",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"data\" + yyyy + mm + dd + hh + mmm + ss+ \".json\";\n// Full filename with path for the file node later\nmsg.filename = \"/data/backup/\" + msg.fname;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 400,
        "wires": [
            [
                "9f298fc737327e0d"
            ]
        ]
    },
    {
        "id": "df1329e791d299e1",
        "type": "function",
        "z": "3ed1b5dba556babc",
        "name": "MQTT Parser",
        "func": "msg.payload = msg.payload.data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 200,
        "wires": [
            [
                "4581405a5fe0e72f"
            ]
        ]
    },
    {
        "id": "4581405a5fe0e72f",
        "type": "debug",
        "z": "3ed1b5dba556babc",
        "name": "debug BESS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 200,
        "wires": []
    },
    {
        "id": "6d09d9973cf5cf9c",
        "type": "file in",
        "z": "b4b3b6ea9198f7ce",
        "name": "ReadFile",
        "filename": "xmltemplatefilename",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 700,
        "y": 440,
        "wires": [
            [
                "1c170924260e971d"
            ]
        ]
    },
    {
        "id": "88a5dd94dc6e0de8",
        "type": "inject",
        "z": "b4b3b6ea9198f7ce",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 440,
        "wires": [
            [
                "81f40a13c8c33450"
            ]
        ]
    },
    {
        "id": "81f40a13c8c33450",
        "type": "function",
        "z": "b4b3b6ea9198f7ce",
        "name": "LocalFile",
        "func": "msg.xmltemplatefilename = \"/data/dr_template/telemetry_data_report_template_v1.xml\";\nglobal.ts_utc = new Date().toISOString();   \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 520,
        "wires": [
            [
                "6d09d9973cf5cf9c"
            ]
        ]
    },
    {
        "id": "1c170924260e971d",
        "type": "string",
        "z": "b4b3b6ea9198f7ce",
        "name": "Data",
        "methods": [
            {
                "name": "replaceAll",
                "params": [
                    {
                        "type": "str",
                        "value": "PLACEHOLDER-XCAL-DATE-TIME"
                    },
                    {
                        "type": "global",
                        "value": "ts_utc"
                    }
                ]
            },
            {
                "name": "replaceAll",
                "params": [
                    {
                        "type": "str",
                        "value": "REQUEST-UUID"
                    },
                    {
                        "type": "global",
                        "value": "uuid"
                    }
                ]
            },
            {
                "name": "replaceAll",
                "params": [
                    {
                        "type": "str",
                        "value": "PLACEHOLDER-BATTERY-POWER"
                    },
                    {
                        "type": "global",
                        "value": "Inv.GridSellPower"
                    }
                ]
            }
        ],
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 910,
        "y": 520,
        "wires": [
            [
                "9809aef71b151ee3",
                "d1fc71adaab138d6"
            ]
        ]
    },
    {
        "id": "9809aef71b151ee3",
        "type": "file",
        "z": "b4b3b6ea9198f7ce",
        "name": "WriteFile",
        "filename": "/data/dr_template/telemetry_data_report_v1.xml",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1100,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "d1fc71adaab138d6",
        "type": "debug",
        "z": "b4b3b6ea9198f7ce",
        "name": "debug report",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 460,
        "wires": []
    },
    {
        "id": "1c523af552715ba5",
        "type": "buffer-parser",
        "z": "7fde02a3dbacda26",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "ProtocolVersion",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "MaximumChargeVoltage",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "MinimumDischargeVoltage",
                "offset": 6,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "MaximumChargeCurrent",
                "offset": 10,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "MinimumDischargeCurrent",
                "offset": 14,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "BatteryVoltage",
                "offset": 18,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "BatteryCurrent",
                "offset": 22,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.01",
                "mask": ""
            },
            {
                "type": "int16be",
                "name": "Temperature",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.1",
                "mask": ""
            },
            {
                "type": "int16be",
                "name": "SOC",
                "offset": 28,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Commands",
                "offset": 30,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Warnings",
                "offset": 32,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "Faults",
                "offset": 34,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "State",
                "offset": 36,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "CycleCount",
                "offset": 38,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "SOH",
                "offset": 40,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "CapacityFullCharge",
                "offset": 42,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.1",
                "mask": ""
            },
            {
                "type": "int16be",
                "name": "BMSCellMaxTemperatureC",
                "offset": 44,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.1",
                "mask": ""
            },
            {
                "type": "int16be",
                "name": "BMSCellMinTemperatureC",
                "offset": 46,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.1",
                "mask": ""
            },
            {
                "type": "int16be",
                "name": "CellMaxVolt",
                "offset": 48,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "int16be",
                "name": "CellMinVolt",
                "offset": 50,
                "length": 1,
                "offsetbit": 0,
                "scale": "0.001",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "LifetimeChargeEnergy",
                "offset": 52,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "LifetimeDischargeEnergy",
                "offset": 56,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "int16be",
                "name": "BatteryManufacturerID",
                "offset": 60,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "int16be",
                "name": "BatteryModelID",
                "offset": 62,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "ascii",
                "name": "SerialNumber1",
                "offset": 64,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "ascii",
                "name": "SerialNumber2",
                "offset": 66,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "ascii",
                "name": "SerialNumber3",
                "offset": 68,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "ascii",
                "name": "SerialNumber4",
                "offset": 70,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "ascii",
                "name": "SerialNumber5",
                "offset": 72,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "ascii",
                "name": "SerialNumber6",
                "offset": 74,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "ascii",
                "name": "SerialNumber7",
                "offset": 76,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "ascii",
                "name": "SerialNumber8",
                "offset": 78,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "ascii",
                "name": "SerialNumber9",
                "offset": 80,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "ascii",
                "name": "SerialNumber10",
                "offset": 82,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "ascii",
                "name": "UniqueID",
                "offset": 84,
                "length": 6,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 770,
        "y": 160,
        "wires": [
            [
                "f16d45ba125cee90"
            ]
        ]
    },
    {
        "id": "165da4096b3f0483",
        "type": "function",
        "z": "7fde02a3dbacda26",
        "name": "BMS",
        "func": "msg.payload = { \n    'fc': 4, \n    'unitid': 20, \n    'address': 0,\n    'quantity': 45\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 160,
        "wires": [
            [
                "935612bb6d9d9bd9"
            ]
        ]
    },
    {
        "id": "935612bb6d9d9bd9",
        "type": "modbus-flex-getter",
        "z": "7fde02a3dbacda26",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "0bf62b5a82a31810",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 550,
        "y": 160,
        "wires": [
            [],
            [
                "1c523af552715ba5"
            ]
        ]
    },
    {
        "id": "527942292ac6ec41",
        "type": "change",
        "z": "7fde02a3dbacda26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BMS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "94c7424f2621c053",
        "type": "cronplus",
        "z": "7fde02a3dbacda26",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */1 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 180,
        "y": 160,
        "wires": [
            [
                "165da4096b3f0483",
                "795da8f112a9c4bf"
            ]
        ]
    },
    {
        "id": "f16d45ba125cee90",
        "type": "function",
        "z": "7fde02a3dbacda26",
        "name": "BMSCalculation",
        "func": "var BMS = msg.payload\nvar payload = {}\npayload['BMSAccountEnergy'] = parseFloat((((BMS['SOH']/100) * (BMS['SOC']/100) * BMS['CapacityFullCharge'] * 51.2) / 1000).toFixed(2))\npayload['BMSAccountPower'] = parseFloat((BMS['BatteryVoltage'] * BMS['BatteryCurrent'] / 1000).toFixed(2))\npayload['BMSTemperatureF'] = parseFloat(((((BMS['Temperature']) * 9) / 5) + 32).toFixed(2))\npayload['BMSCellMaxTemperatureF'] = parseFloat(((((BMS['BMSCellMaxTemperatureC']) * 9) / 5) + 32).toFixed(2))\npayload['BMSCellMinTemperatureF'] = parseFloat(((((BMS['BMSCellMinTemperatureC']) * 9) / 5) + 32).toFixed(2))\nvar data = Object.assign({}, BMS, payload)\nmsg.payload = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 160,
        "wires": [
            [
                "527942292ac6ec41"
            ]
        ]
    },
    {
        "id": "5299935542a8ea35",
        "type": "change",
        "z": "7fde02a3dbacda26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "uuid",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "795da8f112a9c4bf",
        "type": "uuid",
        "z": "7fde02a3dbacda26",
        "uuidVersion": "v4",
        "namespaceType": "",
        "namespace": "",
        "namespaceCustom": "",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "x": 370,
        "y": 240,
        "wires": [
            [
                "5299935542a8ea35"
            ]
        ]
    },
    {
        "id": "19c730a6eabb37ef",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "mydb": "7426633e02a085fd",
        "sqlquery": "fixed",
        "sql": "INSERT INTO Device (\n    Id, Name, Address, PowerType\n) Values (\n    1, \"Testwall WattNode\", \"http://100.113.203.142:1880/wattnode/status\", \"ac\"\n);",
        "name": "",
        "x": 470,
        "y": 1100,
        "wires": [
            [
                "51af04274c5bb5b5"
            ]
        ]
    },
    {
        "id": "da6360578ab5087f",
        "type": "inject",
        "z": "060240745de70bc6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "params",
                "v": "{\"$id\":-1,\"$watts\":420}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 1100,
        "wires": [
            [
                "19c730a6eabb37ef"
            ]
        ]
    },
    {
        "id": "51af04274c5bb5b5",
        "type": "debug",
        "z": "060240745de70bc6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1100,
        "wires": []
    },
    {
        "id": "6361a6c24c243d3d",
        "type": "inject",
        "z": "060240745de70bc6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "params",
                "v": "{}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 1160,
        "wires": [
            [
                "d2848eee44bc6894"
            ]
        ]
    },
    {
        "id": "d2848eee44bc6894",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "mydb": "7426633e02a085fd",
        "sqlquery": "prepared",
        "sql": "SELECT name FROM sqlite_schema WHERE type='table' ORDER BY name;",
        "name": "Check Tables",
        "x": 480,
        "y": 1160,
        "wires": [
            [
                "51af04274c5bb5b5"
            ]
        ],
        "info": "CREATE TABLE PowerAC (\r\n    Id INT,\r\n    Timestamp TEXT,\r\n    Volts FLOAT,\r\n    Amps FLOAT,\r\n    Watts FLOAT,\r\n    WattHours FLOAT,\r\n    PRIMARY KEY(Id, Timestamp)\r\n);\r\nCREATE TABLE PowerDC (\r\n    Id INT,\r\n    Timestamp TEXT,\r\n    Volts FLOAT,\r\n    Amps FLOAT,\r\n    Watts FLOAT,\r\n    WattHours FLOAT,\r\n    PRIMARY KEY(Id, Timestamp)\r\n);\r\nCREATE TABLE Battery (\r\n    Id INT,\r\n    Timestamp TEXT,\r\n    Voltage FLOAT,\r\n    SOC FLOAT,\r\n    Health FLOAT,\r\n    State TEXT,\r\n    PRIMARY KEY(Id, Timestamp)\r\n);\r\nCREATE TABLE Device (\r\n    Id INT,\r\n    Name TEXT,\r\n    Address TEXT,\r\n    PowerType TEXT,\r\n    PRIMARY KEY(Id)\r\n);"
    },
    {
        "id": "6be7e8ffc2b18fa2",
        "type": "comment",
        "z": "060240745de70bc6",
        "name": "Service Description",
        "info": "Describes the logging service (basically a REST API).\n\n## **Definitions:**\n`category`: A type of data, either:\n- `power`\n- `battery`\n\n`id`: A device identifier. Must be positive. -1 is reserved for testing.\n\n## **Interfaces:**\n### POST /log/record\nRecord data into the logs.  \nFormat: `/log/record/[category]/[id]`\n\n### GET /log/read\nRead data from the logs.  \nFormat: `/log/read/[category]/[id]`\n\n### GET /log/status\nGet the connection status of a device.  \nFormat: `/log/status/[id]`\n\n### POST /log/register\nRegister a device with an API endpoint.  \nFormat: `/log/register/[id]`\n\n### GET /log/registered\nCheck if a device is registered.  \nFormat: `/log/registered/[id]`",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "96f99957b5071c89",
        "type": "http in",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "POST /log/record",
        "url": "/log/record/:category/:id",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 260,
        "wires": [
            [
                "36f3b8db5fa30706"
            ]
        ]
    },
    {
        "id": "476df1a222398ed7",
        "type": "http in",
        "z": "060240745de70bc6",
        "name": "GET /log/read",
        "url": "/log/read/:category/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "c17aeb6872cdad76"
            ]
        ],
        "info": "# POST /log/read\r\nRead device data from the log.\r\n\r\n### URL Format\r\nThe request URL must be in the following formats.\r\n- `/log/read/[category]/[id]` - `[category]` is\r\na logging category name and `[id]` is a registered\r\ndevice id\r\n\r\n### Request Parameters\r\n- `start` - the start date and time to get results after\r\n- `end` - the end date and time to get results before\r\n- `filter` - a list of item types to include such as `[watts,watthours]`\r\n- `interval` - the interval at which to retrieve data\r\n\r\n### Procedure\r\n1. Recieve request\r\n2. Check if category exists and device exists\r\n3. Verify device has data for the category\r\n4. \r\n\r\n### Responses\r\n- `404` - Unknown category\r\n- `404` - Unknown device id\r\n- `400` - Invalid category for device\r\n- `400` - Invalid values for category\r\n- `500` - Internal error when writing to SQL database\r\n- `200` - Success  \r\nThe body of the message will contain the timestamp of\r\nthe recorded data, the device id and the device name."
    },
    {
        "id": "dcf90db21725757d",
        "type": "http in",
        "z": "060240745de70bc6",
        "g": "9a4c8c642f90b5f9",
        "name": "GET /log/status",
        "url": "/log/status/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 440,
        "wires": [
            [
                "6c449fd564a9ecd2"
            ]
        ]
    },
    {
        "id": "4fdcdd1aaf2cc630",
        "type": "http in",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "name": "POST /log/register",
        "url": "/log/register",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 310,
        "y": 620,
        "wires": [
            [
                "3431e4fa78349449"
            ]
        ]
    },
    {
        "id": "7af68148ed617c49",
        "type": "http in",
        "z": "060240745de70bc6",
        "g": "e7875e2de9c03017",
        "name": "GET /log/info",
        "url": "/log/info/:id?",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 290,
        "y": 860,
        "wires": [
            [
                "085c4ad6a27bef27"
            ]
        ]
    },
    {
        "id": "50653faa4c685ac1",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "mydb": "7426633e02a085fd",
        "sqlquery": "prepared",
        "sql": "CREATE TABLE PowerDC (\n    Id INT,\n    Timestamp TEXT,\n    Volts FLOAT,\n    Amps FLOAT,\n    Watts FLOAT,\n    WattHours FLOAT,\n    PRIMARY KEY(Id, Timestamp)\n);",
        "name": "PowerDC",
        "x": 460,
        "y": 1260,
        "wires": [
            [
                "51af04274c5bb5b5"
            ]
        ]
    },
    {
        "id": "09c1ece3762367c4",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "mydb": "7426633e02a085fd",
        "sqlquery": "prepared",
        "sql": "CREATE TABLE Battery (\n    Id INT,\n    Timestamp TEXT,\n    Voltage FLOAT,\n    SOC FLOAT,\n    Health FLOAT,\n    State TEXT,\n    PRIMARY KEY(Id, Timestamp)\n);",
        "name": "Battery",
        "x": 460,
        "y": 1300,
        "wires": [
            [
                "51af04274c5bb5b5"
            ]
        ]
    },
    {
        "id": "89e5131385c10783",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "mydb": "7426633e02a085fd",
        "sqlquery": "prepared",
        "sql": "CREATE TABLE Device (\n    Id INT,\n    Name TEXT,\n    Address TEXT,\n    PowerType TEXT,\n    PRIMARY KEY(Id)\n);",
        "name": "Device",
        "x": 450,
        "y": 1340,
        "wires": [
            [
                "51af04274c5bb5b5"
            ]
        ]
    },
    {
        "id": "51d0c0185995205b",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "mydb": "7426633e02a085fd",
        "sqlquery": "prepared",
        "sql": "CREATE TABLE PowerAC (\n    Id INT,\n    Timestamp TEXT,\n    Volts FLOAT,\n    Amps FLOAT,\n    Watts FLOAT,\n    WattHours FLOAT,\n    PRIMARY KEY(Id, Timestamp)\n);",
        "name": "PowerAC",
        "x": 460,
        "y": 1220,
        "wires": [
            [
                "51af04274c5bb5b5"
            ]
        ]
    },
    {
        "id": "fca7083ebe0e8499",
        "type": "inject",
        "z": "060240745de70bc6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "params",
                "v": "{}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 1220,
        "wires": [
            [
                "50653faa4c685ac1",
                "09c1ece3762367c4",
                "89e5131385c10783",
                "51d0c0185995205b"
            ]
        ]
    },
    {
        "id": "144b8ea4e032c046",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "mydb": "7426633e02a085fd",
        "sqlquery": "prepared",
        "sql": "DELETE FROM PowerAC;",
        "name": "Change Things",
        "x": 480,
        "y": 1400,
        "wires": [
            [
                "51af04274c5bb5b5"
            ]
        ]
    },
    {
        "id": "a5cb9904515322dd",
        "type": "inject",
        "z": "060240745de70bc6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "params",
                "v": "{}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 1400,
        "wires": [
            [
                "144b8ea4e032c046"
            ]
        ]
    },
    {
        "id": "47d5ec2e29f4a75c",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "e7875e2de9c03017",
        "name": "Parse Id",
        "func": "msg.params = {\n    '$id': parseInt(msg.req.params.id)\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 860,
        "wires": [
            [
                "de7e2ba1bf229849"
            ]
        ]
    },
    {
        "id": "af2fdf8df365932d",
        "type": "http response",
        "z": "060240745de70bc6",
        "g": "e7875e2de9c03017",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1590,
        "y": 860,
        "wires": []
    },
    {
        "id": "085c4ad6a27bef27",
        "type": "switch",
        "z": "060240745de70bc6",
        "g": "e7875e2de9c03017",
        "name": "Have Id Param?",
        "property": "req.params.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "undefined",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 480,
        "y": 860,
        "wires": [
            [
                "514a5906c8c36ed5"
            ],
            [
                "f00f48fb83236220"
            ]
        ]
    },
    {
        "id": "f00f48fb83236220",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "g": "e7875e2de9c03017",
        "mydb": "7426633e02a085fd",
        "sqlquery": "fixed",
        "sql": "SELECT Id FROM Device;",
        "name": "Get Device Ids",
        "x": 680,
        "y": 980,
        "wires": [
            [
                "1467fa61be5516c4"
            ]
        ]
    },
    {
        "id": "1467fa61be5516c4",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "e7875e2de9c03017",
        "name": "Wrap Id Array",
        "func": "let ret = [];\nfor (var obj of msg.payload) {\n    ret.push(obj.Id);\n}\nmsg.payload = {\n    \"ids\": ret\n};\nmsg.statusCode = 200;\nmsg.headers = undefined;\nmsg.cookies = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 980,
        "wires": [
            [
                "321214cff9ac19e7"
            ]
        ]
    },
    {
        "id": "514a5906c8c36ed5",
        "type": "switch",
        "z": "060240745de70bc6",
        "g": "e7875e2de9c03017",
        "name": "Id is Number?",
        "property": "req.params.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^[0-9]+$",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 680,
        "y": 860,
        "wires": [
            [
                "47d5ec2e29f4a75c"
            ],
            [
                "8a64b210bb419880"
            ]
        ]
    },
    {
        "id": "8a64b210bb419880",
        "type": "subflow:ca2cbf00c7f20f50",
        "z": "060240745de70bc6",
        "g": "e7875e2de9c03017",
        "name": "",
        "x": 890,
        "y": 920,
        "wires": []
    },
    {
        "id": "321214cff9ac19e7",
        "type": "http response",
        "z": "060240745de70bc6",
        "g": "e7875e2de9c03017",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 980,
        "wires": []
    },
    {
        "id": "de7e2ba1bf229849",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "g": "e7875e2de9c03017",
        "mydb": "7426633e02a085fd",
        "sqlquery": "prepared",
        "sql": "SELECT Name, PowerType\nFROM Device\nWHERE Id=$id;",
        "name": "Get Device Info",
        "x": 1040,
        "y": 860,
        "wires": [
            [
                "e74a7937f9a8b10f"
            ]
        ]
    },
    {
        "id": "e74a7937f9a8b10f",
        "type": "switch",
        "z": "060240745de70bc6",
        "g": "e7875e2de9c03017",
        "name": "Device Exists?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1240,
        "y": 860,
        "wires": [
            [
                "9c0608e9f8a9a204"
            ],
            [
                "75b2f8d3b8dafc8f"
            ]
        ]
    },
    {
        "id": "9c0608e9f8a9a204",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "e7875e2de9c03017",
        "name": "Wrap Result",
        "func": "msg.payload = msg.payload[0];\nmsg.statusCode = 200;\nmsg.headers = undefined;\nmsg.cookies = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 860,
        "wires": [
            [
                "af2fdf8df365932d"
            ]
        ]
    },
    {
        "id": "75b2f8d3b8dafc8f",
        "type": "subflow:ca2cbf00c7f20f50",
        "z": "060240745de70bc6",
        "g": "e7875e2de9c03017",
        "name": "",
        "x": 1450,
        "y": 920,
        "wires": []
    },
    {
        "id": "6c449fd564a9ecd2",
        "type": "switch",
        "z": "060240745de70bc6",
        "g": "9a4c8c642f90b5f9",
        "name": "Id is Number?",
        "property": "req.params.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^[0-9]+$",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 500,
        "y": 440,
        "wires": [
            [
                "4fd4e576a66823ba"
            ],
            [
                "8943f005652f4bb1"
            ]
        ]
    },
    {
        "id": "8943f005652f4bb1",
        "type": "subflow:ca2cbf00c7f20f50",
        "z": "060240745de70bc6",
        "g": "9a4c8c642f90b5f9",
        "name": "",
        "x": 710,
        "y": 500,
        "wires": []
    },
    {
        "id": "4fd4e576a66823ba",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "9a4c8c642f90b5f9",
        "name": "Parse Id",
        "func": "msg.params = {\n    '$id': parseInt(msg.req.params.id)\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 440,
        "wires": [
            [
                "653a20d09b8b8699"
            ]
        ]
    },
    {
        "id": "a7dcaa9b3e542b70",
        "type": "http request",
        "z": "060240745de70bc6",
        "g": "9a4c8c642f90b5f9",
        "name": "Request Status",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1520,
        "y": 440,
        "wires": [
            [
                "3a31511fa94e9129"
            ]
        ]
    },
    {
        "id": "ad0aa214fde7a3a9",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "9a4c8c642f90b5f9",
        "name": "Format Request",
        "func": "msg.url = msg.payload[0].Address;\nmsg.deviceName = msg.payload[0].Name;\nmsg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 440,
        "wires": [
            [
                "a7dcaa9b3e542b70"
            ]
        ]
    },
    {
        "id": "653a20d09b8b8699",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "g": "9a4c8c642f90b5f9",
        "mydb": "7426633e02a085fd",
        "sqlquery": "prepared",
        "sql": "SELECT Name, Address\nFROM Device\nWHERE Id=$id;",
        "name": "Get Connection Address",
        "x": 890,
        "y": 440,
        "wires": [
            [
                "0c01c1f85f9c26bc"
            ]
        ]
    },
    {
        "id": "89c0dfd5fcba393b",
        "type": "inject",
        "z": "060240745de70bc6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "params",
                "v": "{\"$id\":-1,\"$watts\":420}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 1460,
        "wires": [
            [
                "cc9e9b385bb1c2db"
            ]
        ]
    },
    {
        "id": "cc9e9b385bb1c2db",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "mydb": "7426633e02a085fd",
        "sqlquery": "fixed",
        "sql": "UPDATE Device\nSET Address=\"http://localhost:1880/wattnode/status\"\nWHERE Id=1;",
        "name": "",
        "x": 470,
        "y": 1460,
        "wires": [
            [
                "51af04274c5bb5b5"
            ]
        ]
    },
    {
        "id": "0c01c1f85f9c26bc",
        "type": "switch",
        "z": "060240745de70bc6",
        "g": "9a4c8c642f90b5f9",
        "name": "Device Exists?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1120,
        "y": 440,
        "wires": [
            [
                "ad0aa214fde7a3a9"
            ],
            [
                "ae7baee6b8c03746"
            ]
        ]
    },
    {
        "id": "ae7baee6b8c03746",
        "type": "subflow:ca2cbf00c7f20f50",
        "z": "060240745de70bc6",
        "g": "9a4c8c642f90b5f9",
        "name": "",
        "x": 1330,
        "y": 500,
        "wires": []
    },
    {
        "id": "3a31511fa94e9129",
        "type": "switch",
        "z": "060240745de70bc6",
        "g": "9a4c8c642f90b5f9",
        "name": "Check Status Code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1730,
        "y": 440,
        "wires": [
            [
                "861c36e9da5cc731"
            ],
            [
                "986ab8e0bcd62ccf"
            ]
        ]
    },
    {
        "id": "986ab8e0bcd62ccf",
        "type": "subflow:c625d94296a71599",
        "z": "060240745de70bc6",
        "g": "9a4c8c642f90b5f9",
        "name": "",
        "env": [
            {
                "name": "errormsg",
                "value": "Failed to get device status.",
                "type": "str"
            },
            {
                "name": "logmsg",
                "value": "Error with Device Status:",
                "type": "str"
            }
        ],
        "x": 1950,
        "y": 500,
        "wires": []
    },
    {
        "id": "861c36e9da5cc731",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "9a4c8c642f90b5f9",
        "name": "Check Response Format",
        "func": "// JSON parse failed\nif (typeof msg.payload === 'string') return [null, msg];\n\nif (!('status' in msg.payload)) return [null, msg];\n\nlet ret;\n\nswitch (msg.payload.status) {\n    case 'fail':\n    case 'connected':\n        ret = msg.payload.status;\n        break;\n    default:\n        return [null, msg];\n}\nmsg.payload = {\n    'device': msg.deviceName,\n    'status': ret\n};\nmsg.statusCode = 200;\nmsg.headers = undefined;\nmsg.cookies = undefined;\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 440,
        "wires": [
            [
                "fafe070557d0a9c8"
            ],
            [
                "e438baf5e34ece62"
            ]
        ]
    },
    {
        "id": "e438baf5e34ece62",
        "type": "subflow:c625d94296a71599",
        "z": "060240745de70bc6",
        "g": "9a4c8c642f90b5f9",
        "name": "",
        "env": [
            {
                "name": "errormsg",
                "value": "Device status response malformed.",
                "type": "str"
            },
            {
                "name": "logmsg",
                "value": "Error with Device Status:",
                "type": "str"
            }
        ],
        "x": 2210,
        "y": 500,
        "wires": []
    },
    {
        "id": "fafe070557d0a9c8",
        "type": "http response",
        "z": "060240745de70bc6",
        "g": "9a4c8c642f90b5f9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2170,
        "y": 440,
        "wires": []
    },
    {
        "id": "cf25a28af42ce908",
        "type": "inject",
        "z": "060240745de70bc6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "params",
                "v": "{}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 1520,
        "wires": [
            [
                "7c06c26b868ebfe6"
            ]
        ]
    },
    {
        "id": "3431e4fa78349449",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "name": "Validate Parameters",
        "func": "msg.insertParams = {};\n\nif (!('name' in msg.payload)) return [null, msg];\nmsg.insertParams[\"$name\"] = msg.payload.name;\n\nif (!('address' in msg.payload)) return [null, msg];\nmsg.insertParams[\"$address\"] = msg.payload.address;\nmsg.url = msg.payload.address;\n\nif (!('powertype' in msg.payload)) return [null, msg];\nswitch (msg.payload.powertype) {\n    case 'acdc':\n    case 'ac':\n    case 'dc':\n    case 'none':\n        msg.insertParams[\"$pt\"] = msg.payload.powertype;\n        break;\n    default:\n        return [null, msg];\n}\n\nmsg.payload = undefined;\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 620,
        "wires": [
            [
                "cebb5660f8fa4666"
            ],
            [
                "4ae0d4cced67a221"
            ]
        ]
    },
    {
        "id": "cebb5660f8fa4666",
        "type": "http request",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "name": "Request Status",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 760,
        "y": 620,
        "wires": [
            [
                "e937f95755f0aea3"
            ]
        ]
    },
    {
        "id": "e937f95755f0aea3",
        "type": "switch",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "name": "Check Status Code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 970,
        "y": 620,
        "wires": [
            [
                "29a8b67e75c87ff3"
            ],
            [
                "bc223d5c956d8dac"
            ]
        ]
    },
    {
        "id": "29a8b67e75c87ff3",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "name": "Check Response Format",
        "func": "// JSON parse failed\nif (typeof msg.payload === 'string') return [null, msg];\n\nif (!('status' in msg.payload)) return [null, msg];\n\nswitch (msg.payload.status) {\n    case 'fail':\n    case 'connected':\n        break;\n    default:\n        return [null, msg];\n}\n\nmsg.payload = undefined;\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 620,
        "wires": [
            [
                "0b35f57da62bc11b"
            ],
            [
                "68bc76ec11fdafee"
            ]
        ]
    },
    {
        "id": "0b35f57da62bc11b",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "name": "Generate Id",
        "func": "// Generate random id\nif (msg.payload === undefined || msg.payload.length > 0) {\n    msg.params = {\n        '$id': Math.floor(Math.random() * 999)\n    };\n    return [null, msg];\n}\n\nmsg.params = {\n    ...msg.params,\n    ...msg.insertParams\n};\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 620,
        "wires": [
            [
                "22e4d983d6f09553"
            ],
            [
                "299b7d608855aa7a"
            ]
        ]
    },
    {
        "id": "22e4d983d6f09553",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "mydb": "7426633e02a085fd",
        "sqlquery": "prepared",
        "sql": "INSERT INTO Device\n(Id, Name, Address, PowerType)\nVALUES\n($id, $name, $address, $pt);",
        "name": "Record Device",
        "x": 1620,
        "y": 620,
        "wires": [
            [
                "25f3a83e48519a95"
            ]
        ]
    },
    {
        "id": "a24736a631d53c6a",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "mydb": "7426633e02a085fd",
        "sqlquery": "prepared",
        "sql": "SELECT *\nFROM Device\nWHERE Id=$id;",
        "name": "Check Record",
        "x": 2000,
        "y": 620,
        "wires": [
            [
                "a493908c90418cda"
            ]
        ]
    },
    {
        "id": "a493908c90418cda",
        "type": "switch",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "name": "Verify Recorded",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2200,
        "y": 620,
        "wires": [
            [
                "d006e5721410794e"
            ],
            [
                "388612334105d9ab"
            ]
        ]
    },
    {
        "id": "d006e5721410794e",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "name": "Wrap Response",
        "func": "msg.payload = {\n    'id': msg.payload[0].Id,\n    'name': msg.payload[0].Name,\n    'address': msg.payload[0].Address,\n    'powertype': msg.payload[0].PowerType\n};\nmsg.statusCode = 200;\nmsg.headers = undefined;\nmsg.cookies = undefined;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2400,
        "y": 620,
        "wires": [
            [
                "3141cf159d9fe3aa"
            ]
        ]
    },
    {
        "id": "3141cf159d9fe3aa",
        "type": "http response",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2570,
        "y": 620,
        "wires": []
    },
    {
        "id": "4ae0d4cced67a221",
        "type": "subflow:2dcb06cda48677d7",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "name": "",
        "env": [
            {
                "name": "errormsg",
                "value": "Request body invalid.",
                "type": "str"
            }
        ],
        "x": 770,
        "y": 680,
        "wires": []
    },
    {
        "id": "bc223d5c956d8dac",
        "type": "subflow:2dcb06cda48677d7",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "name": "",
        "env": [
            {
                "name": "errormsg",
                "value": "Device URL address failed to respond.",
                "type": "str"
            }
        ],
        "x": 1190,
        "y": 680,
        "wires": []
    },
    {
        "id": "68bc76ec11fdafee",
        "type": "subflow:2dcb06cda48677d7",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "name": "",
        "env": [
            {
                "name": "errormsg",
                "value": "Device status response malformed.",
                "type": "str"
            }
        ],
        "x": 1460,
        "y": 740,
        "wires": []
    },
    {
        "id": "388612334105d9ab",
        "type": "subflow:c625d94296a71599",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "name": "",
        "env": [
            {
                "name": "errormsg",
                "value": "Failed to write to database.",
                "type": "str"
            },
            {
                "name": "logmsg",
                "value": "Error with SQL write:",
                "type": "str"
            }
        ],
        "x": 2420,
        "y": 680,
        "wires": []
    },
    {
        "id": "299b7d608855aa7a",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "mydb": "7426633e02a085fd",
        "sqlquery": "fixed",
        "sql": "SELECT 1\nFROM Device\nWHERE Id=$id;",
        "name": "Verify Unique Id",
        "x": 1440,
        "y": 680,
        "wires": [
            [
                "0b35f57da62bc11b"
            ]
        ]
    },
    {
        "id": "78dec1742ad8ab7c",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "mydb": "7426633e02a085fd",
        "sqlquery": "fixed",
        "sql": "SELECT *\nFROM Device\nWHERE Id=336;",
        "name": "Check Record",
        "x": 480,
        "y": 1580,
        "wires": [
            [
                "51af04274c5bb5b5"
            ]
        ]
    },
    {
        "id": "4611f1f7dcacc646",
        "type": "inject",
        "z": "060240745de70bc6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "params",
                "v": "{\"$id\":14}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 1580,
        "wires": [
            [
                "78dec1742ad8ab7c"
            ]
        ]
    },
    {
        "id": "7c06c26b868ebfe6",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "mydb": "7426633e02a085fd",
        "sqlquery": "prepared",
        "sql": "SELECT * FROM PowerAC LIMIT 200;",
        "name": "See All",
        "x": 460,
        "y": 1520,
        "wires": [
            [
                "51af04274c5bb5b5"
            ]
        ],
        "info": "CREATE TABLE PowerAC (\r\n    Id INT,\r\n    Timestamp TEXT,\r\n    Volts FLOAT,\r\n    Amps FLOAT,\r\n    Watts FLOAT,\r\n    WattHours FLOAT,\r\n    PRIMARY KEY(Id, Timestamp)\r\n);\r\nCREATE TABLE PowerDC (\r\n    Id INT,\r\n    Timestamp TEXT,\r\n    Volts FLOAT,\r\n    Amps FLOAT,\r\n    Watts FLOAT,\r\n    WattHours FLOAT,\r\n    PRIMARY KEY(Id, Timestamp)\r\n);\r\nCREATE TABLE Battery (\r\n    Id INT,\r\n    Timestamp TEXT,\r\n    Voltage FLOAT,\r\n    SOC FLOAT,\r\n    Health FLOAT,\r\n    State TEXT,\r\n    PRIMARY KEY(Id, Timestamp)\r\n);\r\nCREATE TABLE Device (\r\n    Id INT,\r\n    Name TEXT,\r\n    Address TEXT,\r\n    PowerType TEXT,\r\n    PRIMARY KEY(Id)\r\n);"
    },
    {
        "id": "25f3a83e48519a95",
        "type": "change",
        "z": "060240745de70bc6",
        "g": "f1ccc8bd2ac54d97",
        "name": "Set up Query",
        "rules": [
            {
                "t": "set",
                "p": "params",
                "pt": "msg",
                "to": "{'$id':msg.params.`$id`}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1810,
        "y": 620,
        "wires": [
            [
                "a24736a631d53c6a"
            ]
        ]
    },
    {
        "id": "a9e4fa5dd7c04fbd",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "Parse Category",
        "func": "msg.log = {\n    'deviceName': msg.payload[0].Name\n};\n\nswitch (msg.req.params.category) {\n    case 'powerac':\n        msg.log.category = \"PowerAC\";\n        break;\n    case 'powerdc':\n        msg.log.category = \"PowerDC\";\n        break;\n    case 'battery':\n        msg.log.category = \"Battery\";\n        break;\n    default:\n        return [null, msg];\n}\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 260,
        "wires": [
            [
                "3365ddb2fede8b56"
            ],
            [
                "8f860c08121896d9"
            ]
        ]
    },
    {
        "id": "4bfe5a943caf0bd3",
        "type": "subflow:ca2cbf00c7f20f50",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "",
        "x": 720,
        "y": 320,
        "wires": []
    },
    {
        "id": "b917ac3be5e883c7",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "mydb": "7426633e02a085fd",
        "sqlquery": "prepared",
        "sql": "SELECT Name, PowerType\nFROM Device\nWHERE Id=$id;",
        "name": "Get Device Name",
        "x": 870,
        "y": 260,
        "wires": [
            [
                "723ef3bd1c68f81a"
            ]
        ]
    },
    {
        "id": "723ef3bd1c68f81a",
        "type": "switch",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "Device Exists?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1080,
        "y": 260,
        "wires": [
            [
                "a9e4fa5dd7c04fbd"
            ],
            [
                "8f860c08121896d9"
            ]
        ]
    },
    {
        "id": "7ff4163166824f35",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "Validate PowerAC",
        "func": "msg.valid = false;\nlet isISODate = flow.get('isISODate');\nlet isFloat = flow.get('isFloat');\n\n// Timestamp\nif (!isISODate(msg.req.body.timestamp)) {\n    return msg;\n} else {\n    msg.params.$timestamp = msg.req.body.timestamp;\n}\n\n// Volts\nif ('volts' in msg.req.body && !isFloat(msg.req.body.volts)) {\n    return msg;\n} else if ('volts' in msg.req.body) {\n    msg.params.$volts = parseFloat(msg.req.body.volts);\n    if (msg.params.$volts < 0) return msg;\n}\n\n// Amps\nif ('amps' in msg.req.body && !isFloat(msg.req.body.amps)) {\n    return msg;\n} else if ('amps' in msg.req.body) {\n    msg.params.$amps = parseFloat(msg.req.body.amps);\n}\n\n// Watts\nif ('watts' in msg.req.body && !isFloat(msg.req.body.watts)) {\n    return msg;\n} else if ('watts' in msg.req.body) {\n    msg.params.$watts = parseFloat(msg.req.body.watts);\n}\n\n// Watthours\nif ('watthours' in msg.req.body && !isFloat(msg.req.body.watthours)) {\n    return msg;\n} else if ('watthours' in msg.req.body) {\n    msg.params.$watthours = parseFloat(msg.req.body.watthours);\n}\n\n// Must include at least volts and amps or watts\nif (!((('$volts' in msg.params) && ('$amps' in msg.params)) || ('$watts' in msg.params))) {\n    return msg;\n}\n\n// Account for optional parameters\nif (!('$volts' in msg.params)) msg.params.$volts = 0;\nif (!('$amps' in msg.params)) msg.params.$amps = 0;\nif (!('$watts' in msg.params)) msg.params.$watts = 0;\nif (!('$watthours' in msg.params)) msg.params.$watthours = 0;\n\nmsg.valid = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n/**\n* @param {string} str\n*/\nfunction isISODate(str) {\n    if (!/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/.test(str)) return false;\n    const d = new Date(str);\n    return d instanceof Date && !isNaN(d.getTime()) && d.toISOString() === str; // valid date \n}\nflow.set('isISODate', isISODate);\n\n/**\n * \n */\nfunction isFloat(x) {\n    if (!isNaN(x)) return true;\n    if (/^\\-?[0-9]*\\.?[0-9]+$/.test(x)) return true;\n    return false;\n}\nflow.set('isFloat', isFloat);",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 260,
        "wires": [
            [
                "933f379216a90879"
            ]
        ]
    },
    {
        "id": "8f860c08121896d9",
        "type": "subflow:ca2cbf00c7f20f50",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "",
        "x": 1300,
        "y": 320,
        "wires": []
    },
    {
        "id": "3365ddb2fede8b56",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "Validate Category",
        "func": "let ret = false;\nswitch (msg.payload[0].PowerType) {\n    case 'acdc':\n        ret = true;\n        break;\n    case 'ac':\n        ret = (msg.log.category === \"PowerAC\");\n        break;\n    case 'dc':\n        ret = (msg.log.category === \"PowerDC\");\n        break;\n    case 'none':\n        ret = (msg.log.category != \"PowerAC\" && msg.log.category != \"PowerDC\");\n        break;\n}\n\nif (!ret) return [null, msg];\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 260,
        "wires": [
            [
                "8190129e7c5f717a"
            ],
            [
                "fd9bc06971cb7d34"
            ]
        ]
    },
    {
        "id": "fd9bc06971cb7d34",
        "type": "subflow:2dcb06cda48677d7",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "",
        "env": [
            {
                "name": "errormsg",
                "value": "Category incompatible with device.",
                "type": "str"
            }
        ],
        "x": 1720,
        "y": 320,
        "wires": []
    },
    {
        "id": "6d1a2f27d0eabb46",
        "type": "subflow:2dcb06cda48677d7",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "",
        "env": [
            {
                "name": "errormsg",
                "value": "Invalid values for category.",
                "type": "str"
            }
        ],
        "x": 2380,
        "y": 320,
        "wires": []
    },
    {
        "id": "430f966847abe48c",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "mydb": "7426633e02a085fd",
        "sqlquery": "msg.topic",
        "sql": "SELECT *\nFROM $category\nWHERE Id=$id AND Timestamp=$timestamp;",
        "name": "Check Record",
        "x": 3140,
        "y": 260,
        "wires": [
            [
                "2322c598d49e45cd"
            ]
        ]
    },
    {
        "id": "18270af3f52bdf02",
        "type": "string",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "Parse Id",
        "methods": [
            {
                "name": "toInteger",
                "params": []
            }
        ],
        "prop": "req.params.id",
        "propout": "params.$id",
        "object": "msg",
        "objectout": "msg",
        "x": 680,
        "y": 260,
        "wires": [
            [
                "b917ac3be5e883c7"
            ]
        ]
    },
    {
        "id": "36f3b8db5fa30706",
        "type": "switch",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "Id is Number?",
        "property": "req.params.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^[0-9]+$",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 500,
        "y": 260,
        "wires": [
            [
                "18270af3f52bdf02"
            ],
            [
                "4bfe5a943caf0bd3"
            ]
        ]
    },
    {
        "id": "8190129e7c5f717a",
        "type": "switch",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "Switch on Log Category",
        "property": "log.category",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PowerAC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PowerDC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Battery",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 1730,
        "y": 260,
        "wires": [
            [
                "7ff4163166824f35"
            ],
            [
                "7ff4163166824f35"
            ],
            [
                "b5414f660bf6f02c"
            ]
        ]
    },
    {
        "id": "933f379216a90879",
        "type": "switch",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "Check Valid",
        "property": "valid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2170,
        "y": 260,
        "wires": [
            [
                "d7570cfbdd465a92"
            ],
            [
                "6d1a2f27d0eabb46"
            ]
        ]
    },
    {
        "id": "b5414f660bf6f02c",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "Validate Battery",
        "func": "msg.valid = false;\nlet isISODate = flow.get('isISODate');\nlet isFloat = flow.get('isFloat');\n\n// Timestamp\nif (!isISODate(msg.req.body.timestamp)) {\n    return msg;\n} else {\n    msg.params.$timestamp = msg.req.body.timestamp;\n}\n\n// Voltage\nif (!isFloat(msg.req.body.voltage)) {\n    return msg;\n} else {\n    msg.params.$voltage = parseFloat(msg.req.body.voltage);\n    if (msg.params.$voltage < 0) return msg;\n}\n\n// SOC\nif ('soc' in msg.req.body && !isFloat(msg.req.body.soc)) {\n    return msg;\n} else if ('soc' in msg.req.body) {\n    msg.params.$soc = parseFloat(msg.req.body.soc);\n    if (msg.params.$soc < 0 || msg.params.$soc > 1) return msg;\n}\n\n// Health\nif ('health' in msg.req.body && !isFloat(msg.req.body.health)) {\n    return msg;\n} else if ('health' in msg.req.body) {\n    msg.params.$health = parseFloat(msg.req.body.health);\n    if (msg.params.$health < 0 || msg.params.$health > 1) return msg;\n}\n\n// State\nswitch (msg.req.body.state) {\n    case 'standby':\n    case 'idle':\n    case 'charging':\n    case 'discharging':\n        msg.params.$state = msg.req.body.state;\n        break;\n    default:\n        return msg;\n}\n\n// Account for optional parameters\nif (!('$soc' in msg.params)) msg.params.$soc = 0;\nif (!('$health' in msg.params)) msg.params.$health = 0;\n\nmsg.valid = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 320,
        "wires": [
            [
                "933f379216a90879"
            ]
        ]
    },
    {
        "id": "d7570cfbdd465a92",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "Table Information",
        "func": "switch (msg.log.category) {\n    case 'PowerAC':\n        msg.log.cols = [\"Id\", \"Timestamp\", \"Volts\", \"Amps\", \"Watts\", \"Watthours\"];\n        msg.log.values = [\"$id\", \"$timestamp\", \"$volts\", \"$amps\", \"$watts\", \"$watthours\"];\n        break;\n    case 'PowerDC':\n        msg.log.cols = [\"Id\", \"Timestamp\", \"Volts\", \"Amps\", \"Watts\", \"Watthours\"];\n        msg.log.values = [\"$id\", \"$timestamp\", \"$volts\", \"$amps\", \"$watts\", \"$watthours\"];\n        break;\n    case 'Battery':\n        msg.log.cols = [\"Id\", \"Timestamp\", \"Voltage\", \"SOC\", \"Health\", \"State\"];\n        msg.log.values = [\"$id\", \"$timestamp\", \"$voltage\", \"$soc\", \"$health\", \"$state\"];\n        break;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2370,
        "y": 260,
        "wires": [
            [
                "91f4422cae6d79f5"
            ]
        ]
    },
    {
        "id": "89070e322dc5035d",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "mydb": "7426633e02a085fd",
        "sqlquery": "msg.topic",
        "sql": "INSERT INTO PowerAC\n(Id, Timestamp, Volts, Amps, Watts, Watthours)\nValues\n($id, $timestamp, $volts, $amps, $watts, $watthours);",
        "name": "Record Values",
        "x": 2760,
        "y": 260,
        "wires": [
            [
                "c7c4cbe8daa21e8a"
            ]
        ]
    },
    {
        "id": "c7c4cbe8daa21e8a",
        "type": "change",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "Set up Query",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "$join(['SELECT * FROM', msg.log.category, 'WHERE Id=$id AND Timestamp=$timestamp;'], ' ')",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$map(msg.log.values[[0..1]], function($v) {$lookup(msg.params, $v)})",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2950,
        "y": 260,
        "wires": [
            [
                "430f966847abe48c"
            ]
        ]
    },
    {
        "id": "91f4422cae6d79f5",
        "type": "change",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "Set up Query",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "$join(\t    ['INSERT INTO ',\t    msg.log.category,\t    ' (',\t    $join(msg.log.cols, ', '),\t    ') VALUES (',\t    $join(msg.log.values, ', '),\t    ');'],\t    '')",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$map(msg.log.values, function($v) {$lookup(msg.params, $v)})",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2570,
        "y": 260,
        "wires": [
            [
                "89070e322dc5035d"
            ]
        ]
    },
    {
        "id": "34a2aa1c6dc52269",
        "type": "function",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "Wrap Response",
        "func": "msg.payload = {\n    'id': msg.payload[0].Id,\n    'name': msg.log.deviceName,\n    'timestamp': msg.payload[0].Timestamp\n};\nmsg.statusCode = 201;\nmsg.headers = undefined;\nmsg.cookies = undefined;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 260,
        "wires": [
            [
                "6c49b36440883348"
            ]
        ]
    },
    {
        "id": "2322c598d49e45cd",
        "type": "switch",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "Verify Recorded",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3340,
        "y": 260,
        "wires": [
            [
                "34a2aa1c6dc52269"
            ],
            [
                "392a19925a0c9b2a"
            ]
        ]
    },
    {
        "id": "392a19925a0c9b2a",
        "type": "subflow:c625d94296a71599",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "",
        "env": [
            {
                "name": "errormsg",
                "value": "Failed to write to database.",
                "type": "str"
            },
            {
                "name": "logmsg",
                "value": "Error with SQL write:",
                "type": "str"
            }
        ],
        "x": 3560,
        "y": 320,
        "wires": []
    },
    {
        "id": "6c49b36440883348",
        "type": "http response",
        "z": "060240745de70bc6",
        "g": "9f9ce2cd5a2131c3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 3710,
        "y": 260,
        "wires": []
    },
    {
        "id": "c17aeb6872cdad76",
        "type": "switch",
        "z": "060240745de70bc6",
        "name": "Id is Number?",
        "property": "req.params.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^[0-9]+$",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 480,
        "y": 120,
        "wires": [
            [
                "e25dda72874ecf22"
            ],
            [
                "e347e72e26d1e067"
            ]
        ]
    },
    {
        "id": "e25dda72874ecf22",
        "type": "string",
        "z": "060240745de70bc6",
        "name": "Parse Id",
        "methods": [
            {
                "name": "toInteger",
                "params": []
            }
        ],
        "prop": "req.params.id",
        "propout": "params.$id",
        "object": "msg",
        "objectout": "msg",
        "x": 660,
        "y": 120,
        "wires": [
            [
                "a14e486152d011a5"
            ]
        ]
    },
    {
        "id": "a14e486152d011a5",
        "type": "sqlite",
        "z": "060240745de70bc6",
        "mydb": "7426633e02a085fd",
        "sqlquery": "prepared",
        "sql": "SELECT Name, PowerType\nFROM Device\nWHERE Id=$id;",
        "name": "Get Device Name",
        "x": 850,
        "y": 120,
        "wires": [
            [
                "fb7271faba7a1ab1"
            ]
        ]
    },
    {
        "id": "fb7271faba7a1ab1",
        "type": "switch",
        "z": "060240745de70bc6",
        "name": "Device Exists?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 120,
        "wires": [
            [
                "102792648e59dd9a"
            ],
            [
                "adf353c229c8485a"
            ]
        ]
    },
    {
        "id": "adf353c229c8485a",
        "type": "subflow:ca2cbf00c7f20f50",
        "z": "060240745de70bc6",
        "name": "",
        "x": 1280,
        "y": 180,
        "wires": []
    },
    {
        "id": "102792648e59dd9a",
        "type": "function",
        "z": "060240745de70bc6",
        "name": "Parse Category",
        "func": "msg.log = {\n    'deviceName': msg.payload[0].Name\n};\n\nswitch (msg.req.params.category) {\n    case 'powerac':\n        msg.log.category = \"PowerAC\";\n        break;\n    case 'powerdc':\n        msg.log.category = \"PowerDC\";\n        break;\n    case 'battery':\n        msg.log.category = \"Battery\";\n        break;\n    default:\n        return [null, msg];\n}\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 120,
        "wires": [
            [
                "406cbf783c7d914a"
            ],
            [
                "adf353c229c8485a"
            ]
        ]
    },
    {
        "id": "406cbf783c7d914a",
        "type": "function",
        "z": "060240745de70bc6",
        "name": "Validate Category",
        "func": "let ret = false;\nswitch (msg.payload[0].PowerType) {\n    case 'acdc':\n        ret = true;\n        break;\n    case 'ac':\n        ret = (msg.log.category === \"PowerAC\");\n        break;\n    case 'dc':\n        ret = (msg.log.category === \"PowerDC\");\n        break;\n    case 'none':\n        ret = (msg.log.category != \"PowerAC\" && msg.log.category != \"PowerDC\");\n        break;\n}\n\nif (!ret) return [null, msg];\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 120,
        "wires": [
            [],
            [
                "98bee7a27186b16f"
            ]
        ]
    },
    {
        "id": "98bee7a27186b16f",
        "type": "subflow:2dcb06cda48677d7",
        "z": "060240745de70bc6",
        "name": "",
        "env": [
            {
                "name": "errormsg",
                "value": "Category incompatible with device.",
                "type": "str"
            }
        ],
        "x": 1700,
        "y": 180,
        "wires": []
    },
    {
        "id": "e347e72e26d1e067",
        "type": "subflow:ca2cbf00c7f20f50",
        "z": "060240745de70bc6",
        "name": "",
        "x": 700,
        "y": 180,
        "wires": []
    },
    {
        "id": "04b92fcc79bf902a",
        "type": "batch",
        "z": "060240745de70bc6",
        "name": "",
        "mode": "concat",
        "count": 10,
        "overlap": 0,
        "interval": 10,
        "allowEmptySequence": false,
        "topics": [
            {
                "topic": ""
            }
        ],
        "x": 1930,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "32ad532e9b84df26",
        "type": "modbus-getter",
        "z": "6b0a517ed4eab56e",
        "name": "WattNode",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "40000",
        "quantity": "2",
        "server": "ff919ca25c0fe87f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 420,
        "y": 240,
        "wires": [
            [],
            [
                "229a275031b19591",
                "03370c5248348dbd"
            ]
        ]
    },
    {
        "id": "cf0c4824bece8cdc",
        "type": "modbus-getter",
        "z": "6b0a517ed4eab56e",
        "name": "Inverter",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "40000",
        "quantity": "2",
        "server": "fb44781298367a59",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 420,
        "y": 300,
        "wires": [
            [],
            [
                "6802ffc9af2297e0",
                "03370c5248348dbd"
            ]
        ]
    },
    {
        "id": "03370c5248348dbd",
        "type": "debug",
        "z": "6b0a517ed4eab56e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 180,
        "wires": []
    },
    {
        "id": "25aa6cfccf81d245",
        "type": "cronplus",
        "z": "6b0a517ed4eab56e",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 * * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 220,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "f445dde206d5c720",
        "type": "modbus-getter",
        "z": "6b0a517ed4eab56e",
        "name": "BMS",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "32",
        "quantity": "10",
        "server": "0bf62b5a82a31810",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 410,
        "y": 360,
        "wires": [
            [],
            [
                "982313c86f2b62c7",
                "03370c5248348dbd"
            ]
        ]
    },
    {
        "id": "229a275031b19591",
        "type": "function",
        "z": "6b0a517ed4eab56e",
        "name": "Validate",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 240,
        "wires": [
            [
                "764c47c29a49bb4e"
            ]
        ]
    },
    {
        "id": "6802ffc9af2297e0",
        "type": "function",
        "z": "6b0a517ed4eab56e",
        "name": "Validate",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 300,
        "wires": [
            [
                "764c47c29a49bb4e"
            ]
        ]
    },
    {
        "id": "982313c86f2b62c7",
        "type": "function",
        "z": "6b0a517ed4eab56e",
        "name": "Validate",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 360,
        "wires": [
            [
                "764c47c29a49bb4e"
            ]
        ]
    },
    {
        "id": "8e44fd2a10f3c17b",
        "type": "change",
        "z": "6b0a517ed4eab56e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connectionStatus",
                "pt": "global",
                "to": "idk",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "764c47c29a49bb4e",
        "type": "join",
        "z": "6b0a517ed4eab56e",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 810,
        "y": 300,
        "wires": [
            [
                "8e44fd2a10f3c17b"
            ]
        ]
    },
    {
        "id": "0a3a8aa810d93f16",
        "type": "modbus-read",
        "z": "6b0a517ed4eab56e",
        "name": "",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "40000",
        "quantity": "2",
        "rate": "1",
        "rateUnit": "h",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "ff919ca25c0fe87f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 370,
        "y": 460,
        "wires": [
            [],
            [
                "03370c5248348dbd"
            ]
        ]
    },
    {
        "id": "04e2ac4c67f5e2d9",
        "type": "modbus-getter",
        "z": "bb83c536da590f5c",
        "name": "Read WattNode",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "40000",
        "quantity": "2",
        "server": "ff919ca25c0fe87f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 580,
        "y": 400,
        "wires": [
            [],
            [
                "d024e323660bd109"
            ]
        ]
    },
    {
        "id": "80685ee48c0c301d",
        "type": "debug",
        "z": "bb83c536da590f5c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 400,
        "wires": []
    },
    {
        "id": "e54c9a7b326d5526",
        "type": "http in",
        "z": "bb83c536da590f5c",
        "name": "GET /wattnode/status",
        "url": "/wattnode/status",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 360,
        "y": 440,
        "wires": [
            [
                "04e2ac4c67f5e2d9",
                "d024e323660bd109"
            ]
        ]
    },
    {
        "id": "456bfc4ce3a5af36",
        "type": "function",
        "z": "bb83c536da590f5c",
        "name": "Validation",
        "func": "\nlet status = \"fail\";\n\nif (msg.values?.length === 2) {\n\n    let ssid = msg.values.map(x => x.toString(16)).join('');\n\n    // SunSpec identifier\n    if (ssid.toUpperCase() === \"53756E53\") {\n\n        status = \"connected\";\n\n    }\n\n}\n\nmsg.payload = { \"status\": status };\nmsg.statusCode = 200;\nmsg.headers = undefined;\nmsg.cookies = undefined;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 440,
        "wires": [
            [
                "80685ee48c0c301d",
                "4c01648c25d3353c"
            ]
        ]
    },
    {
        "id": "4c01648c25d3353c",
        "type": "http response",
        "z": "bb83c536da590f5c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 440,
        "wires": []
    },
    {
        "id": "d024e323660bd109",
        "type": "join",
        "z": "bb83c536da590f5c",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "456bfc4ce3a5af36"
            ]
        ]
    },
    {
        "id": "8e7ee5ad44838396",
        "type": "cronplus",
        "z": "bb83c536da590f5c",
        "name": "Every 5 seconds",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0/5 * * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 210,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "e68300e3f6f03b17",
        "type": "modbus-getter",
        "z": "bb83c536da590f5c",
        "name": "Read WattNode",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": false,
        "logIOActivities": false,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "40179",
        "quantity": "124",
        "server": "ff919ca25c0fe87f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 320,
        "y": 300,
        "wires": [
            [],
            [
                "910801dfc4992c39"
            ]
        ]
    },
    {
        "id": "8286b3587d985566",
        "type": "debug",
        "z": "bb83c536da590f5c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 300,
        "wires": []
    },
    {
        "id": "6e633daaf68a2e6d",
        "type": "inject",
        "z": "bb83c536da590f5c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "e68300e3f6f03b17"
            ]
        ]
    },
    {
        "id": "910801dfc4992c39",
        "type": "change",
        "z": "bb83c536da590f5c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "buffer",
                "pt": "msg",
                "to": "payload.buffer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 300,
        "wires": [
            [
                "6a07ef0b8e5513f5"
            ]
        ]
    },
    {
        "id": "6a07ef0b8e5513f5",
        "type": "subflow:826f2798ac97948c",
        "z": "bb83c536da590f5c",
        "name": "Parse Model 213",
        "env": [
            {
                "name": "ssmodel",
                "value": "{     \"group\": {         \"label\": \"wye-connect three phase (abcn) meter\",         \"name\": \"ac_meter\",         \"points\": [             {                 \"desc\": \"Model identifier\",                 \"label\": \"Model ID\",                 \"mandatory\": \"M\",                 \"name\": \"ID\",                 \"size\": 1,                 \"static\": \"S\",                 \"type\": \"uint16\",                 \"value\": 213             },             {                 \"desc\": \"Model length\",                 \"label\": \"Model Length\",                 \"mandatory\": \"M\",                 \"name\": \"L\",                 \"size\": 1,                 \"static\": \"S\",                 \"type\": \"uint16\"             },             {                 \"desc\": \"Total AC Current\",                 \"label\": \"Amps\",                 \"mandatory\": \"M\",                 \"name\": \"A\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"A\"             },             {                 \"desc\": \"Phase A Current\",                 \"label\": \"Amps PhaseA\",                 \"mandatory\": \"M\",                 \"name\": \"AphA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"A\"             },             {                 \"desc\": \"Phase B Current\",                 \"label\": \"Amps PhaseB\",                 \"mandatory\": \"M\",                 \"name\": \"AphB\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"A\"             },             {                 \"desc\": \"Phase C Current\",                 \"label\": \"Amps PhaseC\",                 \"mandatory\": \"M\",                 \"name\": \"AphC\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"A\"             },             {                 \"desc\": \"Line to Neutral AC Voltage (average of active phases)\",                 \"label\": \"Voltage LN\",                 \"mandatory\": \"M\",                 \"name\": \"PhV\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"V\"             },             {                 \"desc\": \"Phase Voltage AN\",                 \"label\": \"Phase Voltage AN\",                 \"mandatory\": \"M\",                 \"name\": \"PhVphA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"V\"             },             {                 \"desc\": \"Phase Voltage BN\",                 \"label\": \"Phase Voltage BN\",                 \"mandatory\": \"M\",                 \"name\": \"PhVphB\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"V\"             },             {                 \"desc\": \"Phase Voltage CN\",                 \"label\": \"Phase Voltage CN\",                 \"mandatory\": \"M\",                 \"name\": \"PhVphC\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"V\"             },             {                 \"desc\": \"Line to Line AC Voltage (average of active phases)\",                 \"label\": \"Voltage LL\",                 \"mandatory\": \"M\",                 \"name\": \"PPV\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"V\"             },             {                 \"desc\": \"Phase Voltage AB\",                 \"label\": \"Phase Voltage AB\",                 \"mandatory\": \"M\",                 \"name\": \"PPVphAB\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"V\"             },             {                 \"desc\": \"Phase Voltage BC\",                 \"label\": \"Phase Voltage BC\",                 \"mandatory\": \"M\",                 \"name\": \"PPVphBC\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"V\"             },             {                 \"desc\": \"Phase Voltage CA\",                 \"label\": \"Phase Voltage CA\",                 \"mandatory\": \"M\",                 \"name\": \"PPVphCA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"V\"             },             {                 \"desc\": \"Frequency\",                 \"label\": \"Hz\",                 \"mandatory\": \"M\",                 \"name\": \"Hz\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"Hz\"             },             {                 \"desc\": \"Total Real Power\",                 \"label\": \"Watts\",                 \"mandatory\": \"M\",                 \"name\": \"W\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"W\"             },             {                 \"label\": \"Watts phase A\",                 \"name\": \"WphA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"W\"             },             {                 \"label\": \"Watts phase B\",                 \"name\": \"WphB\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"W\"             },             {                 \"label\": \"Watts phase C\",                 \"name\": \"WphC\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"W\"             },             {                 \"desc\": \"AC Apparent Power\",                 \"label\": \"VA\",                 \"name\": \"VA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"VA\"             },             {                 \"label\": \"VA phase A\",                 \"name\": \"VAphA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"VA\"             },             {                 \"label\": \"VA phase B\",                 \"name\": \"VAphB\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"VA\"             },             {                 \"label\": \"VA phase C\",                 \"name\": \"VAphC\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"VA\"             },             {                 \"desc\": \"Reactive Power\",                 \"label\": \"VAR\",                 \"name\": \"VAR\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"var\"             },             {                 \"label\": \"VAR phase A\",                 \"name\": \"VARphA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"var\"             },             {                 \"label\": \"VAR phase B\",                 \"name\": \"VARphB\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"var\"             },             {                 \"label\": \"VAR phase C\",                 \"name\": \"VARphC\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"var\"             },             {                 \"desc\": \"Power Factor\",                 \"label\": \"PF\",                 \"name\": \"PF\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"PF\"             },             {                 \"label\": \"PF phase A\",                 \"name\": \"PFphA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"PF\"             },             {                 \"label\": \"PF phase B\",                 \"name\": \"PFphB\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"PF\"             },             {                 \"label\": \"PF phase C\",                 \"name\": \"PFphC\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"PF\"             },             {                 \"desc\": \"Total Real Energy Exported\",                 \"label\": \"Total Watt-hours Exported\",                 \"mandatory\": \"M\",                 \"name\": \"TotWhExp\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"Wh\"             },             {                 \"label\": \"Total Watt-hours Exported phase A\",                 \"name\": \"TotWhExpPhA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"Wh\"             },             {                 \"label\": \"Total Watt-hours Exported phase B\",                 \"name\": \"TotWhExpPhB\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"Wh\"             },             {                 \"label\": \"Total Watt-hours Exported phase C\",                 \"name\": \"TotWhExpPhC\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"Wh\"             },             {                 \"desc\": \"Total Real Energy Imported\",                 \"label\": \"Total Watt-hours Imported\",                 \"mandatory\": \"M\",                 \"name\": \"TotWhImp\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"Wh\"             },             {                 \"label\": \"Total Watt-hours Imported phase A\",                 \"name\": \"TotWhImpPhA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"Wh\"             },             {                 \"label\": \"Total Watt-hours Imported phase B\",                 \"name\": \"TotWhImpPhB\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"Wh\"             },             {                 \"label\": \"Total Watt-hours Imported phase C\",                 \"name\": \"TotWhImpPhC\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"Wh\"             },             {                 \"desc\": \"Total Apparent Energy Exported\",                 \"label\": \"Total VA-hours Exported\",                 \"name\": \"TotVAhExp\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"VAh\"             },             {                 \"label\": \"Total VA-hours Exported phase A\",                 \"name\": \"TotVAhExpPhA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"VAh\"             },             {                 \"label\": \"Total VA-hours Exported phase B\",                 \"name\": \"TotVAhExpPhB\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"VAh\"             },             {                 \"label\": \"Total VA-hours Exported phase C\",                 \"name\": \"TotVAhExpPhC\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"VAh\"             },             {                 \"desc\": \"Total Apparent Energy Imported\",                 \"label\": \"Total VA-hours Imported\",                 \"name\": \"TotVAhImp\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"VAh\"             },             {                 \"label\": \"Total VA-hours Imported phase A\",                 \"name\": \"TotVAhImpPhA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"VAh\"             },             {                 \"label\": \"Total VA-hours Imported phase B\",                 \"name\": \"TotVAhImpPhB\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"VAh\"             },             {                 \"label\": \"Total VA-hours Imported phase C\",                 \"name\": \"TotVAhImpPhC\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"VAh\"             },             {                 \"desc\": \"Total Reactive Energy Imported Quadrant 1\",                 \"label\": \"Total VAR-hours Imported Q1\",                 \"name\": \"TotVArhImpQ1\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"label\": \"Total VAr-hours Imported Q1 phase A\",                 \"name\": \"TotVArhImpQ1phA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"label\": \"Total VAr-hours Imported Q1 phase B\",                 \"name\": \"TotVArhImpQ1phB\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"label\": \"Total VAr-hours Imported Q1 phase C\",                 \"name\": \"TotVArhImpQ1phC\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"desc\": \"Total Reactive Power Imported Quadrant 2\",                 \"label\": \"Total VAr-hours Imported Q2\",                 \"name\": \"TotVArhImpQ2\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"label\": \"Total VAr-hours Imported Q2 phase A\",                 \"name\": \"TotVArhImpQ2phA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"label\": \"Total VAr-hours Imported Q2 phase B\",                 \"name\": \"TotVArhImpQ2phB\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"label\": \"Total VAr-hours Imported Q2 phase C\",                 \"name\": \"TotVArhImpQ2phC\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"desc\": \"Total Reactive Power Exported Quadrant 3\",                 \"label\": \"Total VAr-hours Exported Q3\",                 \"name\": \"TotVArhExpQ3\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"label\": \"Total VAr-hours Exported Q3 phase A\",                 \"name\": \"TotVArhExpQ3phA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"label\": \"Total VAr-hours Exported Q3 phase B\",                 \"name\": \"TotVArhExpQ3phB\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"label\": \"Total VAr-hours Exported Q3 phase C\",                 \"name\": \"TotVArhExpQ3phC\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"desc\": \"Total Reactive Power Exported Quadrant 4\",                 \"label\": \"Total VAr-hours Exported Q4\",                 \"name\": \"TotVArhExpQ4\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"label\": \"Total VAr-hours Exported Q4 Imported phase A\",                 \"name\": \"TotVArhExpQ4phA\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"label\": \"Total VAr-hours Exported Q4 Imported phase B\",                 \"name\": \"TotVArhExpQ4phB\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"label\": \"Total VAr-hours Exported Q4 Imported phase C\",                 \"name\": \"TotVArhExpQ4phC\",                 \"size\": 2,                 \"type\": \"float32\",                 \"units\": \"varh\"             },             {                 \"desc\": \"Meter Event Flags\",                 \"label\": \"Events\",                 \"mandatory\": \"M\",                 \"name\": \"Evt\",                 \"size\": 2,                 \"symbols\": [                     {                         \"name\": \"M_EVENT_Power_Failure\",                         \"value\": 2                     },                     {                         \"name\": \"M_EVENT_Under_Voltage\",                         \"value\": 3                     },                     {                         \"name\": \"M_EVENT_Low_PF\",                         \"value\": 4                     },                     {                         \"name\": \"M_EVENT_Over_Current\",                         \"value\": 5                     },                     {                         \"name\": \"M_EVENT_Over_Voltage\",                         \"value\": 6                     },                     {                         \"name\": \"M_EVENT_Missing_Sensor\",                         \"value\": 7                     },                     {                         \"name\": \"M_EVENT_Reserved1\",                         \"value\": 8                     },                     {                         \"name\": \"M_EVENT_Reserved2\",                         \"value\": 9                     },                     {                         \"name\": \"M_EVENT_Reserved3\",                         \"value\": 10                     },                     {                         \"name\": \"M_EVENT_Reserved4\",                         \"value\": 11                     },                     {                         \"name\": \"M_EVENT_Reserved5\",                         \"value\": 12                     },                     {                         \"name\": \"M_EVENT_Reserved6\",                         \"value\": 13                     },                     {                         \"name\": \"M_EVENT_Reserved7\",                         \"value\": 14                     },                     {                         \"name\": \"M_EVENT_Reserved8\",                         \"value\": 15                     },                     {                         \"name\": \"M_EVENT_OEM01\",                         \"value\": 16                     },                     {                         \"name\": \"M_EVENT_OEM02\",                         \"value\": 17                     },                     {                         \"name\": \"M_EVENT_OEM03\",                         \"value\": 18                     },                     {                         \"name\": \"M_EVENT_OEM04\",                         \"value\": 19                     },                     {                         \"name\": \"M_EVENT_OEM05\",                         \"value\": 20                     },                     {                         \"name\": \"M_EVENT_OEM06\",                         \"value\": 21                     },                     {                         \"name\": \"M_EVENT_OEM07\",                         \"value\": 22                     },                     {                         \"name\": \"M_EVENT_OEM08\",                         \"value\": 23                     },                     {                         \"name\": \"M_EVENT_OEM09\",                         \"value\": 24                     },                     {                         \"name\": \"M_EVENT_OEM10\",                         \"value\": 25                     },                     {                         \"name\": \"M_EVENT_OEM11\",                         \"value\": 26                     },                     {                         \"name\": \"M_EVENT_OEM12\",                         \"value\": 27                     },                     {                         \"name\": \"M_EVENT_OEM13\",                         \"value\": 28                     },                     {                         \"name\": \"M_EVENT_OEM14\",                         \"value\": 29                     },                     {                         \"name\": \"M_EVENT_OEM15\",                         \"value\": 30                     }                 ],                 \"type\": \"bitfield32\"             }         ],         \"type\": \"group\"     },     \"id\": 213 }",
                "type": "str"
            }
        ],
        "x": 720,
        "y": 300,
        "wires": [
            [
                "8286b3587d985566"
            ]
        ]
    },
    {
        "id": "ecb8d3cdc562a609",
        "type": "debug",
        "z": "e5680ec93718b3f6",
        "g": "06e9bdefebec18b3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 220,
        "wires": []
    },
    {
        "id": "0facc22de6274825",
        "type": "http in",
        "z": "e5680ec93718b3f6",
        "g": "06e9bdefebec18b3",
        "name": "GET /inverter/status",
        "url": "/inverter/status",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 160,
        "wires": [
            [
                "3619a5aeca928cd2",
                "ee354f4e98b669a7"
            ]
        ]
    },
    {
        "id": "fa54962a7e0f8069",
        "type": "function",
        "z": "e5680ec93718b3f6",
        "g": "06e9bdefebec18b3",
        "name": "Validation",
        "func": "\nlet status = \"fail\";\n\nif (msg.values?.length === 2) {\n\n    let ssid = msg.values.map(x => x.toString(16)).join('');\n\n    // SunSpec identifier\n    if (ssid.toUpperCase() === \"53756E53\") {\n\n        status = \"connected\";\n\n    }\n\n}\n\nmsg.payload = { \"status\": status };\nmsg.statusCode = 200;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 160,
        "wires": [
            [
                "ecb8d3cdc562a609",
                "f79824953eef4fc6"
            ]
        ]
    },
    {
        "id": "f79824953eef4fc6",
        "type": "http response",
        "z": "e5680ec93718b3f6",
        "g": "06e9bdefebec18b3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 160,
        "wires": []
    },
    {
        "id": "3619a5aeca928cd2",
        "type": "modbus-getter",
        "z": "e5680ec93718b3f6",
        "g": "06e9bdefebec18b3",
        "name": "Read Inverter",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "40000",
        "quantity": "2",
        "server": "fb44781298367a59",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 420,
        "y": 220,
        "wires": [
            [],
            [
                "ee354f4e98b669a7"
            ]
        ]
    },
    {
        "id": "ee354f4e98b669a7",
        "type": "join",
        "z": "e5680ec93718b3f6",
        "g": "06e9bdefebec18b3",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 590,
        "y": 160,
        "wires": [
            [
                "fa54962a7e0f8069"
            ]
        ]
    },
    {
        "id": "194adb635f9b1c11",
        "type": "http in",
        "z": "e5680ec93718b3f6",
        "g": "af38d5b5994866d9",
        "name": "GET /inverter/status/details",
        "url": "/inverter/status/details",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 360,
        "wires": [
            [
                "79a457a7c046625e",
                "f1865b16d068e488",
                "efea16944386fe65"
            ]
        ]
    },
    {
        "id": "f1865b16d068e488",
        "type": "modbus-getter",
        "z": "e5680ec93718b3f6",
        "g": "af38d5b5994866d9",
        "name": "Read Status",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "40252",
        "quantity": "2",
        "server": "fb44781298367a59",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 450,
        "y": 480,
        "wires": [
            [],
            [
                "f1a98c8e98819aad"
            ]
        ]
    },
    {
        "id": "79a457a7c046625e",
        "type": "modbus-getter",
        "z": "e5680ec93718b3f6",
        "g": "af38d5b5994866d9",
        "name": "Read Mode",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "40241",
        "quantity": "1",
        "server": "fb44781298367a59",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 450,
        "y": 420,
        "wires": [
            [],
            [
                "862dba68ffcab69a"
            ]
        ]
    },
    {
        "id": "c78d10d9207b6273",
        "type": "buffer-parser",
        "z": "e5680ec93718b3f6",
        "g": "af38d5b5994866d9",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16be",
                "name": "mode",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "inverterStatus",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint16be",
                "name": "chargerStatus",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 3,
        "x": 1130,
        "y": 420,
        "wires": [
            [
                "9c8f9570df4d8eae"
            ],
            [
                "3ef0649182b0b463"
            ],
            [
                "2c25dc453d994771"
            ]
        ]
    },
    {
        "id": "2d223f6874c2ebd9",
        "type": "join",
        "z": "e5680ec93718b3f6",
        "g": "af38d5b5994866d9",
        "name": "",
        "mode": "auto",
        "build": "buffer",
        "property": "payload.buffer",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 970,
        "y": 420,
        "wires": [
            [
                "c78d10d9207b6273"
            ]
        ]
    },
    {
        "id": "862dba68ffcab69a",
        "type": "change",
        "z": "e5680ec93718b3f6",
        "g": "af38d5b5994866d9",
        "name": "Index = 0",
        "rules": [
            {
                "t": "set",
                "p": "parts.index",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 420,
        "wires": [
            [
                "b0229cb481613388"
            ]
        ]
    },
    {
        "id": "f1a98c8e98819aad",
        "type": "change",
        "z": "e5680ec93718b3f6",
        "g": "af38d5b5994866d9",
        "name": "Index = 1",
        "rules": [
            {
                "t": "set",
                "p": "parts.index",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 480,
        "wires": [
            [
                "b0229cb481613388"
            ]
        ]
    },
    {
        "id": "b0229cb481613388",
        "type": "change",
        "z": "e5680ec93718b3f6",
        "g": "af38d5b5994866d9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "parts.type",
                "pt": "msg",
                "to": "buffer",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "parts.count",
                "pt": "msg",
                "to": "2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "parts.ch",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "parts.key",
                "pt": "msg",
                "to": "buffer",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "parts.id",
                "pt": "msg",
                "to": "lmao",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 420,
        "wires": [
            [
                "2d223f6874c2ebd9"
            ]
        ]
    },
    {
        "id": "9c8f9570df4d8eae",
        "type": "function",
        "z": "e5680ec93718b3f6",
        "g": "af38d5b5994866d9",
        "name": "Parse Mode",
        "func": "switch (msg.payload) {\n    case 2:\n        msg.payload = \"Standby\";\n        break;\n    case 3:\n        msg.payload = \"Operating\";\n        break;\n    default:\n        msg.payload = \"???\";\n        break;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 420,
        "wires": [
            [
                "0c344cccf8263101"
            ]
        ]
    },
    {
        "id": "3ef0649182b0b463",
        "type": "function",
        "z": "e5680ec93718b3f6",
        "g": "af38d5b5994866d9",
        "name": "Parse Inverter Status",
        "func": "switch (msg.payload) {\n    case 1024:\n        msg.payload = \"Invert\";\n        break;\n    case 1025:\n        msg.payload = \"AC Pass Through\";\n        break;\n    case 1026:\n        msg.payload = \"APS Only\";\n        break;\n    case 1027:\n        msg.payload = \"Load Sense\";\n        break;\n    case 1028:\n        msg.payload = \"Inverter Disabled\";\n        break;\n    case 1029:\n        msg.payload = \"Load Sense Ready\";\n        break;\n    case 1030:\n        msg.payload = \"Engaging Inverter\";\n        break;\n    case 1031:\n        msg.payload = \"Invert Fault\";\n        break;\n    case 1032:\n        msg.payload = \"Inverter Standby\";\n        break;\n    case 1033:\n        msg.payload = \"Grid-Tied\";\n        break;\n    case 1034:\n        msg.payload = \"Grid Support\";\n        break;\n    case 1035:\n        msg.payload = \"Gen Support\";\n        break;\n    case 1036:\n        msg.payload = \"Sell-to-Grid\";\n        break;\n    case 1037:\n        msg.payload = \"Load Shaving\";\n        break;\n    case 1038:\n        msg.payload = \"Grid Frequency Stabilization\";\n        break;\n    case 1039:\n        msg.payload = \"AC Coupling\";\n        break;\n    case 1040:\n        msg.payload = \"Reverse Ibatt\";\n        break;\n    default:\n        msg.payload = \"???\";\n        break;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 480,
        "wires": [
            [
                "0c344cccf8263101"
            ]
        ]
    },
    {
        "id": "2c25dc453d994771",
        "type": "function",
        "z": "e5680ec93718b3f6",
        "g": "af38d5b5994866d9",
        "name": "Parse Charger Status",
        "func": "switch (msg.payload) {\n    case 768:\n        msg.payload = \"Not Charging\";\n        break;\n    case 769:\n        msg.payload = \"Bulk\";\n        break;\n    case 770:\n        msg.payload = \"Absorption\";\n        break;\n    case 771:\n        msg.payload = \"Overcharge\";\n        break;\n    case 772:\n        msg.payload = \"Equalize\";\n        break;\n    case 773:\n        msg.payload = \"Float\";\n        break;\n    case 774:\n        msg.payload = \"No Float\";\n        break;\n    case 775:\n        msg.payload = \"Constant VI\";\n        break;\n    case 776:\n        msg.payload = \"Charger Disabled\";\n        break;\n    case 777:\n        msg.payload = \"Qualifying AC\";\n        break;\n    case 778:\n        msg.payload = \"Qualifying APS\";\n        break;\n    case 779:\n        msg.payload = \"Engaging Charger\";\n        break;\n    case 780:\n        msg.payload = \"Charge Fault\";\n        break;\n    case 781:\n        msg.payload = \"Charger Suspend\";\n        break;\n    case 782:\n        msg.payload = \"AC Good\";\n        break;\n    case 783:\n        msg.payload = \"APS Good\";\n        break;\n    case 784:\n        msg.payload = \"AC Fault\";\n        break;\n    case 785:\n        msg.payload = \"Charge\";\n        break;\n    case 786:\n        msg.payload = \"Absorption Exit Pending\";\n        break;\n    case 787:\n        msg.payload = \"Ground Fault\";\n        break;\n    case 788:\n        msg.payload = \"AC Good Pending\";\n        break;\n    default:\n        msg.payload = \"???\";\n        break;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 540,
        "wires": [
            [
                "0c344cccf8263101"
            ]
        ]
    },
    {
        "id": "0c344cccf8263101",
        "type": "function",
        "z": "e5680ec93718b3f6",
        "g": "af38d5b5994866d9",
        "name": "Add Names",
        "func": "let ret = {};\nret[msg.specification.name] = msg.payload;\nmsg.payload = ret;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 420,
        "wires": [
            [
                "bd2b19c13d701435"
            ]
        ]
    },
    {
        "id": "bd2b19c13d701435",
        "type": "join",
        "z": "e5680ec93718b3f6",
        "g": "af38d5b5994866d9",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1710,
        "y": 420,
        "wires": [
            [
                "efea16944386fe65"
            ]
        ]
    },
    {
        "id": "efea16944386fe65",
        "type": "join",
        "z": "e5680ec93718b3f6",
        "g": "af38d5b5994866d9",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1850,
        "y": 360,
        "wires": [
            [
                "34eb321b97e8d73e"
            ]
        ]
    },
    {
        "id": "34eb321b97e8d73e",
        "type": "http response",
        "z": "e5680ec93718b3f6",
        "g": "af38d5b5994866d9",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2000,
        "y": 360,
        "wires": []
    },
    {
        "id": "a7cd2a04947910d5",
        "type": "Modbus-RTU-Slave",
        "z": "b1d7e9e0a4578c1f",
        "name": "",
        "slaveId": "31",
        "serialPort": "/dev/dongle",
        "baudRate": "19200",
        "dataBits": "8",
        "stopBits": "1",
        "parity": "none",
        "logEnabled": false,
        "showErrors": false,
        "x": 530,
        "y": 400,
        "wires": [
            [
                "2bc91253b236b353"
            ]
        ]
    },
    {
        "id": "2bc91253b236b353",
        "type": "debug",
        "z": "b1d7e9e0a4578c1f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 400,
        "wires": []
    },
    {
        "id": "22622d788359fff1",
        "type": "http in",
        "z": "2dc6fe71588e17c7",
        "name": "GET /history/status",
        "url": "/history/status",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "9da9c475ca294313"
            ]
        ]
    },
    {
        "id": "9da9c475ca294313",
        "type": "function",
        "z": "2dc6fe71588e17c7",
        "name": "Validation",
        "func": "msg.payload = { \"status\": 'connected' };\nmsg.statusCode = 200;\nmsg.headers = undefined;\nmsg.cookies = undefined;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 140,
        "wires": [
            [
                "1122500b80d983de"
            ]
        ]
    },
    {
        "id": "1122500b80d983de",
        "type": "http response",
        "z": "2dc6fe71588e17c7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 550,
        "y": 140,
        "wires": []
    }
]